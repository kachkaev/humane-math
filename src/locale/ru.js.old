/**
 * Russian language constants and dynamic strings.
 * Section: Math
 */

//################################
// Math Token Names
//################################
if (!Lang.db.math_token_name)
	Lang.db.math_token_name = {};

Lang.db.math_token_name[MathTokenType.RB_LEFT] = "открывающаяся скобка";
Lang.db.math_token_name[MathTokenType.RB_RIGHT] = "закрывающаяся скобка";
Lang.db.math_token_name[MathTokenType.COMMA] = "запятая";
Lang.db.math_token_name[MathTokenType.EQUAL] = "знак равенства";
Lang.db.math_token_name[MathTokenType.LESS] = "знак «меньше»";
Lang.db.math_token_name[MathTokenType.MORE] = "знак «больше»";
Lang.db.math_token_name[MathTokenType.LESS_EQUAL] = "знак «меньше либо равно»";
Lang.db.math_token_name[MathTokenType.MORE_EQUAL] = "знак «больше либо равно»";
Lang.db.math_token_name[MathTokenType.ADD] = "плюс";
Lang.db.math_token_name[MathTokenType.SUBTRACT] = "минус";
Lang.db.math_token_name[MathTokenType.MULTIPLY] = "знак «умножить»";
Lang.db.math_token_name[MathTokenType.DIVIDE] = "знак «разделить»";
Lang.db.math_token_name[MathTokenType.POWER] = "знак возведения в степень";
Lang.db.math_token_name[MathTokenType.NUMBER] = "число";
Lang.db.math_token_name[MathTokenType.SYMBOL] = "имя переменной, константы или функции";
Lang.db.math_token_name[MathTokenType.SEMICOLON] = "точка с запятой";

// Родительный падеж
Lang.db.math_token_name_rod_p = {};
Lang.db.math_token_name_rod_p[MathTokenType.RB_LEFT] = "открывающейся скобки";
Lang.db.math_token_name_rod_p[MathTokenType.RB_RIGHT] = "закрывающейся скобки";
Lang.db.math_token_name_rod_p[MathTokenType.COMMA] = "запятой";
Lang.db.math_token_name_rod_p[MathTokenType.EQUAL] = "знака равенства";
Lang.db.math_token_name_rod_p[MathTokenType.LESS] = "знака «меньше»";
Lang.db.math_token_name_rod_p[MathTokenType.MORE] = "знака «больше»";
Lang.db.math_token_name_rod_p[MathTokenType.LESS_EQUAL] = "знака «меньше либо равно»";
Lang.db.math_token_name_rod_p[MathTokenType.MORE_EQUAL] = "знака «больше либо равно»";
Lang.db.math_token_name_rod_p[MathTokenType.ADD] = "плюса";
Lang.db.math_token_name_rod_p[MathTokenType.SUBTRACT] = "минуса";
Lang.db.math_token_name_rod_p[MathTokenType.MULTIPLY] = "знака «умножить»";
Lang.db.math_token_name_rod_p[MathTokenType.DIVIDE] = "знака «разделить»";
Lang.db.math_token_name_rod_p[MathTokenType.POWER] = "знака возведения в степень";
Lang.db.math_token_name_rod_p[MathTokenType.NUMBER] = "числа";
Lang.db.math_token_name_rod_p[MathTokenType.SYMBOL] = "имени переменной, константы или функции";
Lang.db.math_token_name_rod_p[MathTokenType.SEMICOLON] = "точки с запятой";

// Винительный падеж
Lang.db.math_token_name_vin_p = {};
Lang.db.math_token_name_vin_p[MathTokenType.RB_LEFT] = "открывающуюся скобку";
Lang.db.math_token_name_vin_p[MathTokenType.RB_RIGHT] = "закрывающуюся скобку";
Lang.db.math_token_name_vin_p[MathTokenType.COMMA] = "запятую";
Lang.db.math_token_name_vin_p[MathTokenType.EQUAL] = "знак равенства";
Lang.db.math_token_name_vin_p[MathTokenType.LESS] = "знак «меньше»";
Lang.db.math_token_name_vin_p[MathTokenType.MORE] = "знак «больше»";
Lang.db.math_token_name_vin_p[MathTokenType.LESS_EQUAL] = "знак «меньше либо равно»";
Lang.db.math_token_name_vin_p[MathTokenType.MORE_EQUAL] = "знак «больше либо равно»";
Lang.db.math_token_name_vin_p[MathTokenType.ADD] = "плюс";
Lang.db.math_token_name_vin_p[MathTokenType.SUBTRACT] = "минус";
Lang.db.math_token_name_vin_p[MathTokenType.MULTIPLY] = "знак «умножить»";
Lang.db.math_token_name_vin_p[MathTokenType.DIVIDE] = "знак «разделить»";
Lang.db.math_token_name_vin_p[MathTokenType.POWER] = "знак возведения в степень";
Lang.db.math_token_name_vin_p[MathTokenType.NUMBER] = "число";
Lang.db.math_token_name_vin_p[MathTokenType.SYMBOL] = "имя переменной, константы или функции";
Lang.db.math_token_name_vin_p[MathTokenType.SEMICOLON] = "точку с запятой";

// Творительный падеж
Lang.db.math_token_name_tvor_p = {};
Lang.db.math_token_name_tvor_p[MathTokenType.RB_LEFT] = "открывающейся скобкой";
Lang.db.math_token_name_tvor_p[MathTokenType.RB_RIGHT] = "закрывающейся скобкой";
Lang.db.math_token_name_tvor_p[MathTokenType.COMMA] = "запятой";
Lang.db.math_token_name_tvor_p[MathTokenType.EQUAL] = "знаком равенства";
Lang.db.math_token_name_tvor_p[MathTokenType.LESS] = "знаком «меньше»";
Lang.db.math_token_name_tvor_p[MathTokenType.MORE] = "знаком «больше»";
Lang.db.math_token_name_tvor_p[MathTokenType.LESS_EQUAL] = "знаком «меньше либо равно»";
Lang.db.math_token_name_tvor_p[MathTokenType.MORE_EQUAL] = "знаком «больше либо равно»";
Lang.db.math_token_name_tvor_p[MathTokenType.ADD] = "плюсом";
Lang.db.math_token_name_tvor_p[MathTokenType.SUBTRACT] = "минусом";
Lang.db.math_token_name_tvor_p[MathTokenType.MULTIPLY] = "знаком «умножить»";
Lang.db.math_token_name_tvor_p[MathTokenType.DIVIDE] = "знаком «разделить»";
Lang.db.math_token_name_tvor_p[MathTokenType.POWER] = "знаком возведения в степень";
Lang.db.math_token_name_tvor_p[MathTokenType.NUMBER] = "числом";
Lang.db.math_token_name_tvor_p[MathTokenType.SYMBOL] = "именем переменной, константы или функции";
Lang.db.math_token_name_tvor_p[MathTokenType.SEMICOLON] = "точкой с запятой";

//################################
// Math Messages
//################################
if (!Lang.db.math_message)
	Lang.db.math_message = {};

//################################
// Lexical errors

// A token is passed to some errors (arguments[0])
Lang.db.math_message["e_lex_" + MathTokenType.E_UNKNOWN] = function(){return "Встретился запрещённый знак «" + arguments[0].raw + "».";};
Lang.db.math_message["e_lex_" + MathTokenType.E_NUMBER_MALFORMED] = "Число записано неверно. В нём может содержаться максимум один разделитель (точка), цифры должны быть по обеим сторонам точки, например <em>3.14</em>.";
Lang.db.math_message["e_lex_" + MathTokenType.E_NUMBER_EXPONENTIAL] = "Запрещено записывать числа в экспоненциальной форме. Следует перезаписать число.";
Lang.db.math_message["e_lex_" + MathTokenType.E_VERTICAL_SLASH] = "Вертикальную черту использовать запрещено. Для взятия модуля от числа существует функция <em>abs(аргумент)</em>.";
Lang.db.math_message["e_lex_" + MathTokenType.E_STARSTAR] = "Форма записи <b>«**»</b> запрещена. Чтобы возводить аргумент в степень, используйте символ «каретка» <em>(“^”)</em> или функцию <em>power(аргумент, степень)</em>.";
Lang.db.math_message["e_lex_" + MathTokenType.E_EQUALEQUAL] = " Запрещено записывать два знака равенства подряд. Используйте <em>один</em> знак равенства для сравнений и присвоений.";
Lang.db.math_message["e_lex_" + MathTokenType.E_MISPLACED_DOT] = "Точка может использоваться только для разделения целой и дробной части в числах. Здесь она лишняя.";
Lang.db.math_message["e_lex_" + MathTokenType.E_SB_LEFT] = "Запрещено использовать квадратные скобки. Поставьте открывающуюся круглую скобку.";
Lang.db.math_message["e_lex_" + MathTokenType.E_SB_RIGHT] = "Запрещено использовать квадратные скобки. Поставьте закрывающуюся круглую скобку.";
Lang.db.math_message["e_lex_" + MathTokenType.E_CB_LEFT] = "Запрещено использовать фигурные скобки. Поставьте открывающуюся круглую скобку.";
Lang.db.math_message["e_lex_" + MathTokenType.E_CB_RIGHT] = "Запрещено использовать фигурные скобки. Поставьте закрывающуюся круглую скобку.";
Lang.db.math_message["e_lex_" + MathTokenType.E_AB_LEFT] = "Запрещено использовать угловые скобки. Поставьте открывающуюся круглую скобку.";
Lang.db.math_message["e_lex_" + MathTokenType.E_AB_RIGHT] = "Запрещено использовать угловые скобки. Поставьте закрывающуюся круглую скобку.";
Lang.db.math_message["e_lex_" + MathTokenType.E_BACK_SLASH] = "Запрещено использовать обратную косую черту. Для операции деления используйте <em>прямую косую черту</em> ( / ).";
Lang.db.math_message["e_lex_" + MathTokenType.E_REST] = "Введённая строка содержит слишком много символов, и была разобрана не полностью.";

//################################
// Syntax errors

// Variables passed to some errors (fields of arguments[0]):
// 		currentToken
//			.type
//			.raw
//		previousToken

Lang.db.math_message["e_syn_unknown"] = "Неизвестная синтаксическая ошибка.";

Lang.db.math_message["e_syn_function_argument_empty"] 		= "Следует ввести аргумент функции.";
Lang.db.math_message["e_syn_function_argument_wrong_symbol"] = function(){return "Использовать " + Lang.db.math_token_name_vin_p[arguments[0].currentToken.type] + " внутри аргумента функции запрещено.";};
Lang.db.math_message["e_syn_function_argument_semicolon"]	= "Нельзя разделять аргументы функции точкой с запятой. Поменяйте её на запятую.";

Lang.db.math_message["e_syn_missing_rb"] 				= "Не хватает закрывающейся круглой скобки.";
Lang.db.math_message["e_syn_missing_multiply"]			= function(){return Lang.ucfirst(Lang.db.math_token_name_vin_p[arguments[0].currentToken.type])+" нельзя записывать сразу после "+Lang.db.math_token_name_rod_p[arguments[0].previousToken.type]+". Возможно, пропущен знак умножения или другой знак арифметического действия.";};
Lang.db.math_message["e_syn_missing_operand"]			= function(){return "Не хватает операнда (числа, константы, функции и т. д.) между «" + arguments[0].previousToken.raw + "» и «" + arguments[0].currentToken.raw + "».";};
Lang.db.math_message["e_syn_missing_operand_at_begin"]	= function(){return "Перед " + Lang.db.math_token_name_tvor_p[arguments[0].currentToken.type] + " должен стоять операнд (число, константа, функция и т. д.).";};
Lang.db.math_message["e_syn_missing_operand_at_end"]	= function(){return "После " + Lang.db.math_token_name_rod_p[arguments[0].currentToken.type] + " должен стоять операнд (число, константа, функция, и т. д.).";};
Lang.db.math_message["e_syn_extra_rb"]					= "Обнаружена лишняя закрывающаяся скобка.";

Lang.db.math_message["e_syn_brackets_empty"]		= "Использование пустых скобок разрешено только для функций без аргументов.";
Lang.db.math_message["e_syn_brackets_wrong_symbol"] = function(){return "Запрещено использовать " + Lang.db.math_token_name_vin_p[arguments[0].currentToken.type] + " в выражении в скобках.";};

Lang.db.math_message["e_syn_statements_wrong_symbol"]	= function(){return "В этом месте запрещено использовать " + Lang.db.math_token_name_vin_p[arguments[0].currentToken.type] + ".";};
Lang.db.math_message["e_syn_statements_comma"]			= "В этом месте ставить запятую запрещено, так как она может использоваться только для разделения аргументов функций. Для разделения записей используйте точку с запятой.";

Lang.db.math_message["e_syn_statement_empty_left"]			 = function(){return "Перед " + Lang.db.math_token_name_tvor_p[arguments[0].currentToken.type] + " должно обязательно находиться выражение.";};
Lang.db.math_message["e_syn_statement_empty_right"] 		 = function(){return "После " + Lang.db.math_token_name_rod_p[arguments[0].currentToken.type] + " должно обязательно находиться выражение.";};
Lang.db.math_message["e_syn_statement_extra_statement_sign"] = function(){return "В этом месте недопустимо использовать " + Lang.db.math_token_name_vin_p[arguments[0].currentToken.type] + ", так как уже имеется "+Lang.db.math_token_name[arguments[0].statementSign.type]+".";};


//################################
// Semantic errors
// Variables passed to some errors (fields of arguments[0]):
// 		name	name of a symbol (with keeping letters case and dialect)
//		id		id if a symbol
//		argumentCount							Required number of arguments for functions.
//		argumentCount.min, argumentCount.max	Required number of arguments  for functions with various number of arguments.
//		realArgumentCount						Number of arguments passed to a function.

Lang.db.math_message["e_sem_constant_forbidden_all"]	= function(){return "Использовать константы в этом поле ввода запрещено.";};
Lang.db.math_message["e_sem_constant_forbidden_this"]	= function(){return "Константу <b>"+arguments[0].name+"</b> в этом поле ввода использовать запрещено.";};
Lang.db.math_message["e_sem_constant_as_function"]		= function(){return "Вы пытаетесь использовать константу <b>"+arguments[0].name+"</b> как функцию. Уберите открывающуюся скобку за именем константы, либо поставьте перед ней знак арифметического действия.";};

Lang.db.math_message["e_sem_variable_forbidden_all"]	= function(){return "Использовать переменные в этом поле ввода запрещено.";};
Lang.db.math_message["e_sem_variable_forbidden_this"]	= function(){return "Переменную <b>"+arguments[0].name+"</b> в этом поле ввода использовать запрещено.";};
Lang.db.math_message["e_sem_variable_as_function"]		= function(){return "Вы пытаетесь использовать переменную <b>"+arguments[0].name+"</b> как функцию. Уберите открывающуюся скобку за именем переменной, либо поставьте перед ней знак арифметического действия.";};

Lang.db.math_message["e_sem_function_forbidden_all"]	= function(){return "Использовать функции в этом поле ввода запрещено.";};
Lang.db.math_message["e_sem_function_forbidden_this"]	= function(){return "Функцию <b>"+arguments[0].name+"</b> в этом поле ввода использовать запрещено.";};
Lang.db.math_message["e_sem_function_as_symbol"]		= function(){return "Вы пытаетесь использовать функцию <b>"+arguments[0].name+"</b> без скобок. Пожалуйста, поставьте скобки после имени функции.";};

Lang.db.math_message["e_sem_function_arguments_few_exact"]			= function(){return "У функции <b>"+arguments[0].name+"</b> слишком мало аргументов (должно быть "+arguments[0].argumentCount+", а введено "+arguments[0].realArgumentCount+").";};
Lang.db.math_message["e_sem_function_arguments_extra_exact"]		= function(){return "У функции <b>"+arguments[0].name+"</b> слишком много аргументов (должно быть "+arguments[0].argumentCount+", а введено "+arguments[0].realArgumentCount+").";};
Lang.db.math_message["e_sem_function_arguments_extra_0"]			= function(){return "У функции <b>"+arguments[0].name+"</b> не должно быть аргументов вообще. Следует удалить их все, и оставить скобки.";};
Lang.db.math_message["e_sem_function_arguments_few_range_n_inf"]	= function(){return "У функции <b>"+arguments[0].name+"</b> слишком мало аргументов (должно быть больше "+arguments[0].argumentCount.min+", а введено "+arguments[0].realArgumentCount+").";};
Lang.db.math_message["e_sem_function_arguments_few_range_n_n"]		= function(){return "У функции <b>"+arguments[0].name+"</b> слишком мало аргументов (должно быть от "+arguments[0].argumentCount.min+" до "+arguments[0].argumentCount.max+", а введено "+arguments[0].realArgumentCount+").";};
Lang.db.math_message["e_sem_function_arguments_extra_range_n_n"]	= function(){return "У функции <b>"+arguments[0].name+"</b> слишком много аргументов (должно быть от "+arguments[0].argumentCount.min+" до "+arguments[0].argumentCount.max+", а введено "+arguments[0].realArgumentCount+").";};

Lang.db.math_message["e_sem_unknown_symbol"]			= function(){return "Встретилась неизвестная переменная или константа <b>"+arguments[0].name+"</b>.";};
Lang.db.math_message["e_sem_unknown_function"]			= function(){return "Встретилась неизвестная функция <b>"+arguments[0].name+"</b>.";};

Lang.db.math_message["e_sem_forbidden_equation"]				= "В этом поле ввода запрещено использовать уравнения или равенства.";
Lang.db.math_message["e_sem_forbidden_inequality"]				= "В этом поле ввода запрещено использовать неравенства.";
Lang.db.math_message["e_sem_forbidden_semicolon"]				= "Использование точки с запятой в этом поле ввода недопустимо.";
Lang.db.math_message["e_sem_forbidden_sequence_of_statements"]	= "Точка с запятой может использовать только для разделения записей, а использование нескольких записей в этом поле ввода недопустимо.";
Lang.db.math_message["e_sem_forbidden_empty"]					= "Поле ввода не должно быть пустым.";

Lang.db.math_message["e_sem_expected_finite"]				= function(){return "Значение поля должно быть конечным числом.";};//, but is equal to "+arguments[0].value+".";};
Lang.db.math_message["e_sem_expected_int"]					= function(){return "Значение поля должно быть целым числом, а равно "+arguments[0].value+".";};
Lang.db.math_message["e_sem_expected_range"]				= function(){return "Значение поля должно быть в диапазоне между "+arguments[0].range.min+" и "+arguments[0].range.max+", но оно равно "+arguments[0].value+".";};
Lang.db.math_message["e_sem_expected_greaterthan"]			= function(){return "Значение поля должно быть больше "+arguments[0].bound+", но оно равно "+arguments[0].value+".";};
Lang.db.math_message["e_sem_expected_lessthan"]				= function(){return "Значение поля должно быть меньше "+arguments[0].bound+", но оно равно "+arguments[0].value+".";};
