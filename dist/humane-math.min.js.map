{"version":3,"sources":["humane-math.min.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","_core","HumaneMath","undefined","_message","_messageList","_pos","_tokenType","_token","_tokenStream","_treeNodeType","_treeNode","_tree","_validationRule","_validationRules","_validator","_dialect","_locale","_symbols","_text","_calculator","Message","MessageList","Pos","TokenType","Token","TokenStream","TreeNodeType","TreeNode","Tree","ValidationRule","ValidationRules","Validator","Dialect","Locale","Symbols","Text","Calculator","symbols","validationRules","locales","addLocale","locale","data","setLocale","currentLocale","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","type","pos","params","arguments","_type","_params","get","_interopRequireDefault","obj","__esModule","default","_underscore","_underscore2","_len","listsToJoin","Array","_key","clear","_list","concat","message","push","sortBy","mathMessage","len","Infinity","col","row","pos1","pos2","EOF","RB_LEFT","RB_RIGHT","COMMA","EQUAL","LESS","MORE","LESS_EQUAL","MORE_EQUAL","ADD","SUBTRACT","MULTIPLY","DIVIDE","POWER","NUMBER","SYMBOL","SEMICOLON","E_UNKNOWN","E_NUMBER_MALFORMED","E_NUMBER_EXPONENTIAL","E_VERTICAL_SLASH","E_STARSTAR","E_EQUALEQUAL","E_MISPLACED_DOT","E_SB_LEFT","E_SB_RIGHT","E_CB_LEFT","E_CB_RIGHT","E_AB_LEFT","E_AB_RIGHT","E_BACK_SLASH","E_REST","raw","isUndefined","isExpressionSign","isTermSign","isPowerSign","clone","isErrorToken","isRightBracket","isLeftBracket","LB_LEFT","isNumber","_ltrim","_ltrim2","_rtrim","_rtrim2","reset","errors","hash","tokens","getHash","cursorPos","temp","charAt","WHITESPACE","indexOf","slice","dontThrowException","TOKEN_FOUND_EXCEPTION","newRaw","MAX_TOKEN_COUNT","skipSpaces","searchString","addToken","ltrim","match","RE_SYMBOL","toLowerCase","RE_E_NUMBER_MALFORMED","RE_E_NUMBER_EXPONENTIAL","Number","replace","RE_NUMBER","e","oldHash","add","tokenPos","moveCursor","getToken","tokenTypes","isArray","currentToken","level","makeString","defaultToWhiteSpace","nativeTrimLeft","String","trimLeft","str","characters","RegExp","object","escapeRegExp","source","nativeTrimRight","trimRight","EMPTY","SEQUENCE_OF_STATEMENTS","STATEMENT","EXPRESSION","TERM","FUNCTION","STANDARD_CONSTANT","STANDARD_VARIABLE","STANDARD_FUNCTION","STATEMENT_EQUATION","STATEMENT_INEQUALITY","E_UNPARSED","brackets","hasErrors","UNPARSED","tokenStream","checkForMissedOperands","firstToken","subparseStatementSequence","currentNode","createEmptyTreeNode","firstNodeToken","currentSubNode","subparseStatement","subNodes","subActions","isEOF","findNextToken","previousToken","lastToken","wrapNode","unite","nextToken","isEmpty","leftPart","subparseExpression","rightPart","statementSign","isStatementSign","subType","subparseTerm","each","subNode","breakLoop","subparsePower","isSymbol","isMathOperator","between","cloneWithCorrectedType","pseudoMultiplyToken","subparseFactor","name","nameRaw","namePos","argumentPos","ending","currentArgument","pop","stopSymbol","findNextTokenAtTheSameLevel","_stopSymbol","result","beginning","nodeToBeWrapped","wrapperNode","MAX_NODE_COUNT","listOrParams","NO","list","extend","ONLY","EXCLUDING","YES","allowFunctions","allowConstants","allowVariables","acceptEquations","acceptInequalities","acceptSequenceOfStatements","acceptEmpty","acceptOnlyNumber","valueOnlyFinite","valueOnlyInteger","valueRange","valueOnlyGreaterThan","valueOnlyLessThan","map","warnings","tree","rules","calculator","isNo","validateNode","calculateCachedValues","isYes","isFinite","Math","round","isOnly","min","max","range","bound","treeNode","symbolId","possibleMessageParams","findConstant","isExcluding","findVariable","findFunction","validateSubNodes","errorPos","argumentCount","functions","realArgumentCount","hasOwnProperty","isUnparsed","WEST","WEST_LONG","EAST","GREEK","RUS","RUS_LONG","PROGRAMMING","MISC","_removeMarkdown","_removeMarkdown2","objectToLocalize","messageId","messages","isString","isFunction","markdown","toMarkdown","md","options","stripListLeaders","gfm","output","console","error","functionDefinitionsById","constantDefinitionsById","variableDefinitionsById","functionIdsByAlias","constantIdsByAlias","variableIdsByAlias","disableAutoIndexing","initialize","enableAutoIndexing","indexAliases","autoIndexingDisabled","aliases","executor","nonSimplifiable","calculateForNaNs","currentFunctionDefinition","extractIdFromAliases","Error","POSITIVE_INFINITY","currentConstantDefinition","currentVariableDefinition","functionName","constantName","variableName","whatToIndex","whereToPut","symbolDefinition","alias","keys","_messageList2","_tokenStream2","_tree2","_validator2","defaultContent","hasWarnings","setContent","newContent","content","tokenize","parse","validate","sort","_typeof","Symbol","iterator","constructor","_tokenType2","_treeNodeType2","_text2","expressionNode","variables","userSymbols","NaN","calculateValueOfTheNode","COULD_NOT_CALCULATE_EXCEPTION","clearCachedValues","calculateCacheMode","subNodesValues","failOnSubNodeNaN","subNodesValuesCount","constants","pow","isNaN","ABSTRACT_FUNCTION","setRule","FUNCTION_Y_X","FUNCTION_X_Y","FUNCTION_X_T","FUNCTION_Y_T","FUNCTION_R_A","ARG_RANGE","ARG_STEPS","CANVAS_BOUNDS","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","StandardSymbols","_HumaneMath$Symbols","getPrototypeOf","apply","addTrigonometricFunctions","addInverseTrigonometricFunctions","addHyperbolicTrigonometricFunctions","addInverseHyperbolicTrigonometricFunctions","addRoundingFunctions","addInvolutionFunctions","addMiscFunctions","addNonMathFunctions","addConstants","addVariables","addEasterEggs","addFunction","sin","sine","син","синус","cos","cosine","кос","косинус","tan","tangent","tg","тан","тангенс","cot","cotangent","ctg","ctn","котан","котангенс","sec","secant","сек","секанс","csc","cosecant","cosec","косек","косеканс","arcsin","arcsine","asin","арксин","арксинус","arccos","arccosine","acos","арккос","арккосинус","arctan","arctangent","arctg","atan","арктан","арктангенс","arccot","arccotangent","arcctg","acot","арккотан","арккотангенс","PI","arcsec","arcsecant","asec","арксек","арксеканс","arccsc","arccosec","acosec","арккосеканс","sinh","sh","exp","cosh","ch","tanh","th","coth","сth","sech","csch","cosech","arcsinh","arsh","log","sqrt","arccosh","arch","arctanh","arth","arccoth","arcth","arcsech","arsch","arccsch","arcsch","abs","floor","ceil","ceiling","frac","fractional","fract","power","степень","sqr","квадрат","кк","cbrt","корень","лог","логарифм","ln","lg","LN10","modulus","модуль","random","random2","sgn","sign","maximum","макс","максимум","minimum","мин","минимум","if","если","addConstant","pi","π","пи","е","E","phi","ph","φ","фи","addVariable","х","у","а","answer_to_the_ultimate_question_of_life_the_universe_and_everything","ответ_на_главный_вопрос_жизни_вселенной_и_всего_такого","STANDARD","_defineProperty","_tokenNames","_messages","tokenNames","token"],"mappings":"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","file":"humane-math.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"_\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"_\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HumaneMath\"] = factory(require(\"_\"));\n\telse\n\t\troot[\"HumaneMath\"] = factory(root[\"_\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _core = __webpack_require__(1);\n\n\t__webpack_require__(26);\n\n\t__webpack_require__(27);\n\n\t__webpack_require__(28);\n\n\texports.default = _core.HumaneMath;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.HumaneMath = undefined;\n\t\n\tvar _message = __webpack_require__(2);\n\t\n\tvar _messageList = __webpack_require__(3);\n\t\n\tvar _pos = __webpack_require__(5);\n\t\n\tvar _tokenType = __webpack_require__(6);\n\t\n\tvar _token = __webpack_require__(7);\n\t\n\tvar _tokenStream = __webpack_require__(8);\n\t\n\tvar _treeNodeType = __webpack_require__(14);\n\t\n\tvar _treeNode = __webpack_require__(15);\n\t\n\tvar _tree = __webpack_require__(16);\n\t\n\tvar _validationRule = __webpack_require__(17);\n\t\n\tvar _validationRules = __webpack_require__(18);\n\t\n\tvar _validator = __webpack_require__(19);\n\t\n\tvar _dialect = __webpack_require__(20);\n\t\n\tvar _locale = __webpack_require__(21);\n\t\n\tvar _symbols = __webpack_require__(23);\n\t\n\tvar _text = __webpack_require__(24);\n\t\n\tvar _calculator = __webpack_require__(25);\n\t\n\tvar HumaneMath = {\n\t  Message: _message.Message,\n\t  MessageList: _messageList.MessageList,\n\t  Pos: _pos.Pos,\n\t\n\t  TokenType: _tokenType.TokenType,\n\t  Token: _token.Token,\n\t  TokenStream: _tokenStream.TokenStream,\n\t\n\t  TreeNodeType: _treeNodeType.TreeNodeType,\n\t  TreeNode: _treeNode.TreeNode,\n\t  Tree: _tree.Tree,\n\t\n\t  ValidationRule: _validationRule.ValidationRule,\n\t  ValidationRules: _validationRules.ValidationRules,\n\t  Validator: _validator.Validator,\n\t\n\t  Dialect: _dialect.Dialect,\n\t  Locale: _locale.Locale,\n\t  Symbols: _symbols.Symbols,\n\t\n\t  Text: _text.Text,\n\t  Calculator: _calculator.Calculator,\n\t\n\t  symbols: {},\n\t  validationRules: {},\n\t  locales: {}\n\t};\n\t\n\tHumaneMath.addLocale = function (locale, data) {\n\t  HumaneMath.locales[locale] = new _locale.Locale(data);\n\t};\n\t\n\tHumaneMath.setLocale = function (locale) {\n\t  HumaneMath.currentLocale = locale;\n\t};\n\t\n\texports.HumaneMath = HumaneMath;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t * Message keeps information about an error or a warning in a math text\n\t */\n\t\n\tvar Message = exports.Message = function () {\n\t  function Message() {\n\t    _classCallCheck(this, Message);\n\t  }\n\t\n\t  _createClass(Message, [{\n\t    key: \"construct\",\n\t\n\t\n\t    /**\n\t     * Creates a message\n\t     *\n\t     * @param {string} type\n\t     *    Unique textual identifier of a message type.\n\t     * @param {Pos} pos\n\t     *    Part of the Text the message is related to.\n\t     * @param {Object} params\n\t     *    Additional parameters of the message that clarify its context.\n\t     */\n\t    value: function construct(type, pos) {\n\t      var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t      this._type = type;\n\t      this._pos = pos;\n\t      this._params = params;\n\t      //this.strCache = null;\n\t    }\n\t  }, {\n\t    key: \"type\",\n\t    get: function get() {\n\t      return this._type;\n\t    }\n\t  }, {\n\t    key: \"pos\",\n\t    get: function get() {\n\t      return this._pos;\n\t    }\n\t  }, {\n\t    key: \"params\",\n\t    get: function get() {\n\t      return this._params;\n\t    }\n\t  }]);\n\t\n\t  return Message;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.MessageList = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * MessageList is used to store lists of errors or warnings in Math classes.\n\t */\n\t\n\tvar MessageList = exports.MessageList = function () {\n\t\n\t  /**\n\t   * Creates an empty list of Math Messages\n\t   *\n\t   * @param {MathMessageList} [MathMessageList1], [MathMessageList2], [...]\n\t   *    Lists to be joined.\n\t   */\n\t\n\t  function MessageList() {\n\t    for (var _len = arguments.length, listsToJoin = Array(_len), _key = 0; _key < _len; _key++) {\n\t      listsToJoin[_key] = arguments[_key];\n\t    }\n\t\n\t    _classCallCheck(this, MessageList);\n\t\n\t    this.clear();\n\t\n\t    // Join input argument lists if any arguments were passed.\n\t    if (listsToJoin.length) {\n\t\n\t      for (var i = listsToJoin.length - 1; i >= 0; i--) {\n\t        if (arguments[i]) {\n\t          this._list = this._list.concat(listsToJoin[i]._list);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Clears the list of Math Messages\n\t   *\n\t   * @returns {MathMessageList} current object.\n\t   */\n\t\n\t\n\t  _createClass(MessageList, [{\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this._list = [];\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Adds a message into the list.\n\t     *\n\t     * @param {Message} message\n\t     *    message Message that needs to be added.\n\t     *\n\t     * @returns {MessageList}\n\t     *     current object\n\t     */\n\t\n\t  }, {\n\t    key: 'add',\n\t    value: function add(message) {\n\t      this._list.push(message);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Helps to verify whether a list of messages is empty.\n\t     *\n\t     * @returns {boolean}\n\t     *     true if the list is empty.\n\t     */\n\t\n\t  }, {\n\t    key: 'isEmpty',\n\t    value: function isEmpty() {\n\t      return this._list.length == 0;\n\t    }\n\t\n\t    /**\n\t     * Returns the number of messages in the list.\n\t     *\n\t     * @returns {number}\n\t     */\n\t\n\t  }, {\n\t    key: 'count',\n\t    value: function count() {\n\t      return this._list.length;\n\t    }\n\t\n\t    /**\n\t     * Sorts the list by message positions.\n\t     *\n\t     * @returns {MessageList}\n\t     *     current object\n\t     */\n\t\n\t  }, {\n\t    key: 'sort',\n\t    value: function sort() {\n\t      this._list = _underscore2.default.sortBy(this._list, function (mathMessage) {\n\t        if (mathMessage.pos) {\n\t          return mathMessage.pos.pos + 0.0001 * mathMessage.pos.len;\n\t        } else {\n\t          return Infinity;\n\t        }\n\t      });\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return MessageList;\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Saves the position of a token / tree / node / error / warning, etc.\n\t */\n\t\n\tvar Pos = exports.Pos = function () {\n\t  function Pos() {\n\t    _classCallCheck(this, Pos);\n\t  }\n\t\n\t  _createClass(Pos, [{\n\t    key: \"construct\",\n\t\n\t\n\t    /**\n\t     * Creates an object that saves the position of\n\t     * token / tree / node / error / warning / etc.\n\t     *\n\t     * @param {int} col\n\t     *    Position — Column\n\t     * @param {int} row\n\t     *    Position — Row\n\t     * @param {int} pos\n\t     *    Absolute Position\n\t     * @param {int} length\n\t     *    Length of an object\n\t     */\n\t    value: function construct(col, row, pos, length) {\n\t      this.col = col;\n\t      this.row = row;\n\t      this.pos = pos;\n\t      this.len = length;\n\t    }\n\t\n\t    /**\n\t     * Creates a new Pos object which contains the whole range of characters\n\t     * from the beginning of pos1 to the end of pos2.\n\t     *\n\t     * @param {Pos} pos1\n\t     * @param {Pos} pos2\n\t     *\n\t     * @returns {Pos}\n\t     *      new Pos object.\n\t     */\n\t\n\t  }, {\n\t    key: \"unite\",\n\t    value: function unite(pos1, pos2) {\n\t      return new Pos(pos1.col, pos1.row, pos1.pos, pos2.len + pos2.pos - pos1.pos);\n\t    }\n\t\n\t    /**\n\t     * Creates a new Pos object which contains the range of characters between\n\t     * end of pos1 to the beginning of pos2.\n\t     *\n\t     * @param {Pos} pos1\n\t     * @param {Pos} pos2\n\t     *\n\t     * @returns {Pos}\n\t     *      new Pos object.\n\t     */\n\t\n\t  }, {\n\t    key: \"between\",\n\t    value: function between(pos1, pos2) {\n\t      return new Pos(pos1.col + pos1.len, pos1.row, pos1.pos + pos1.len, pos2.pos - pos1.pos - pos1.len);\n\t    }\n\t\n\t    /**\n\t     * Creates a new Pos object with zero length at the beginning of the given pos.\n\t     *\n\t     * @param {Pos} pos\n\t     *\n\t     * @returns {Pos}\n\t     */\n\t\n\t  }, {\n\t    key: \"beginning\",\n\t    value: function beginning(pos) {\n\t      return new Pos(pos.col, pos.row, pos.pos, 0);\n\t    }\n\t\n\t    /**\n\t     * Creates a new Pos object with zero length at the ending of the given pos.\n\t     *\n\t     * @param {Pos} pos\n\t     *\n\t     * @returns {Pos}\n\t     */\n\t\n\t  }, {\n\t    key: \"ending\",\n\t    value: function ending(pos) {\n\t      return new Pos(pos.col + pos.len, pos.row, pos.pos + pos.len, 0);\n\t    }\n\t  }]);\n\t\n\t  return Pos;\n\t}();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Token types\n\t */\n\t\n\tvar TokenType = exports.TokenType = function TokenType() {\n\t  _classCallCheck(this, TokenType);\n\t};\n\t\n\tTokenType.EOF = 0;\n\tTokenType.RB_LEFT = 1;\n\tTokenType.RB_RIGHT = 2;\n\tTokenType.COMMA = 3;\n\tTokenType.EQUAL = 11;\n\tTokenType.LESS = 12;\n\tTokenType.MORE = 13;\n\tTokenType.LESS_EQUAL = 14;\n\tTokenType.MORE_EQUAL = 15;\n\tTokenType.ADD = 21;\n\tTokenType.SUBTRACT = 22;\n\tTokenType.MULTIPLY = 23;\n\tTokenType.DIVIDE = 24;\n\tTokenType.POWER = 25;\n\tTokenType.NUMBER = 31;\n\tTokenType.SYMBOL = 32;\n\tTokenType.SEMICOLON = 33;\n\tTokenType.E_UNKNOWN = 128;\n\tTokenType.E_NUMBER_MALFORMED = 129;\n\tTokenType.E_NUMBER_EXPONENTIAL = 130;\n\tTokenType.E_VERTICAL_SLASH = 131;\n\tTokenType.E_STARSTAR = 132;\n\tTokenType.E_EQUALEQUAL = 133;\n\tTokenType.E_MISPLACED_DOT = 134;\n\tTokenType.E_SB_LEFT = 140;\n\tTokenType.E_SB_RIGHT = 141;\n\tTokenType.E_CB_LEFT = 142;\n\tTokenType.E_CB_RIGHT = 143;\n\tTokenType.E_AB_LEFT = 144;\n\tTokenType.E_AB_RIGHT = 145;\n\tTokenType.E_BACK_SLASH = 146;\n\tTokenType.E_REST = 150;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Token = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _pos = __webpack_require__(5);\n\t\n\tvar _tokenType = __webpack_require__(6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Token = exports.Token = function () {\n\t  /**\n\t   * Creates a single token for use in the MathTokenStream\n\t   *\n\t   * @param {number} type\n\t   *    Type of a token\n\t   * @param {number} col\n\t   *    Position — Column\n\t   * @param {number} row\n\t   *    Position — Row\n\t   * @param {number} pos\n\t   *    Absolute Position\n\t   * @param {string} raw\n\t   *    Raw (unchanged) data\n\t   * @param {Numeric} value\n\t   *    (Optional) Value (calculated data) for some token types\n\t   */\n\t\n\t  function Token(type, col, row, pos, raw, value) {\n\t    _classCallCheck(this, Token);\n\t\n\t    this.type = type;\n\t    if (!_underscore2.default.isUndefined(raw)) {\n\t      this.pos = new _pos.Pos(col, row, pos, raw.length);\n\t      this.raw = raw;\n\t    }\n\t    if (!_underscore2.default.isUndefined(value)) {\n\t      this.value = value;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Returns a string digest of a token. This can be useful when calculating hash of a TokenStream.\n\t   *\n\t   * @returns {string}\n\t   */\n\t\n\t\n\t  _createClass(Token, [{\n\t    key: 'getHash',\n\t    value: function getHash() {\n\t      return this.type + '|' + this.pos.pos + '|' + this.pos.row + '|' + (_underscore2.default.isUndefined(this.value) ? '' : this.value) + '$';\n\t    }\n\t\n\t    /**\n\t     * Returns true if the token corresponds to an end of an input string.\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isEOF',\n\t    value: function isEOF() {\n\t      return this.type == _tokenType.TokenType.EOF;\n\t    }\n\t\n\t    /**\n\t     * Returns true if requested token is an error token.\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isErrorToken',\n\t    value: function isErrorToken() {\n\t      return this.type >= _tokenType.TokenType.E_UNKNOWN;\n\t    }\n\t\n\t    /**\n\t     * Checks if a token is a left bracket of any kind\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isLeftBracket',\n\t    value: function isLeftBracket() {\n\t      return this.type == _tokenType.TokenType.RB_LEFT || this.type == _tokenType.TokenType.E_SB_LEFT || this.type == _tokenType.TokenType.E_CB_LEFT || this.type == _tokenType.TokenType.E_AB_LEFT;\n\t    }\n\t\n\t    /**\n\t     * Checks if a token is a right bracket of any kind\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isRightBracket',\n\t    value: function isRightBracket() {\n\t      return this.type == _tokenType.TokenType.RB_RIGHT || this.type == _tokenType.TokenType.E_SB_RIGHT || this.type == _tokenType.TokenType.E_CB_RIGHT || this.type == _tokenType.TokenType.E_AB_RIGHT;\n\t    }\n\t\n\t    /**\n\t     * Checks if a token is numeric\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isNumber',\n\t    value: function isNumber() {\n\t      return this.type == _tokenType.TokenType.NUMBER || this.type == _tokenType.TokenType.E_NUMBER_MALFORMED || this.type == _tokenType.TokenType.E_NUMBER_EXPONENTIAL;\n\t    }\n\t\n\t    /**\n\t     * Checks if a token is a symbol\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isSymbol',\n\t    value: function isSymbol() {\n\t      return this.type == _tokenType.TokenType.SYMBOL;\n\t    }\n\t\n\t    /**\n\t     * Checks if a token is a power sign (^ or **)\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isPowerSign',\n\t    value: function isPowerSign() {\n\t      return this.type == _tokenType.TokenType.POWER || this.type == _tokenType.TokenType.E_STARSTAR;\n\t    }\n\t\n\t    /**\n\t     * Checks if a token is a term sign (MULTIPLY or DIVIDE)\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isTermSign',\n\t    value: function isTermSign() {\n\t      return this.type == _tokenType.TokenType.MULTIPLY || this.type == _tokenType.TokenType.DIVIDE || this.type == _tokenType.TokenType.E_MISPLACED_DOT || this.type == _tokenType.TokenType.E_BACK_SLASH;\n\t    }\n\t\n\t    /**\n\t     * Checks if a token is a mathematical operator\n\t     * (any of those that are used in parsing expressions, terms and powers).\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isMathOperator',\n\t    value: function isMathOperator() {\n\t      return this.isExpressionSign() || this.isTermSign() || this.isPowerSign();\n\t    }\n\t\n\t    /**\n\t     * Checks if a token is an expression sign (ADD or SUBTRACT)\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isExpressionSign',\n\t    value: function isExpressionSign() {\n\t      return this.type == _tokenType.TokenType.ADD || this.type == _tokenType.TokenType.SUBTRACT;\n\t    }\n\t\n\t    /**\n\t     * Checks if a token is an statement sign\n\t     * (EQUAL|LESS|MORE|MORE_EQUAL|LESS_EQUAL)\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isStatementSign',\n\t    value: function isStatementSign() {\n\t      return this.type == _tokenType.TokenType.EQUAL || this.type == _tokenType.TokenType.LESS || this.type == _tokenType.TokenType.MORE || this.type == _tokenType.TokenType.MORE_EQUAL || this.type == _tokenType.TokenType.LESS_EQUAL || this.type == _tokenType.TokenType.E_EQUALEQUAL;\n\t    }\n\t\n\t    /**\n\t     * Makes a shallow copy of a token object with the type changed to the correct\n\t     * one in case it is an special error token. This is useful for passing data to\n\t     * language templates in order to avoid redundancy in them.\n\t     *\n\t     * @returns {boolean}\n\t     *\n\t     * @example E_NUMBER_MALFORMED changes to NUMBER\n\t     */\n\t\n\t  }, {\n\t    key: 'cloneWithCorrectedType',\n\t    value: function cloneWithCorrectedType() {\n\t      var clone = _underscore2.default.clone(this);\n\t\n\t      // Substitution of a type for error tokens\n\t      if (clone.isErrorToken()) {\n\t        if (clone.isRightBracket()) {\n\t          clone.type = _tokenType.TokenType.RB_LEFT;\n\t        } else if (clone.isLeftBracket()) {\n\t          clone.type = _tokenType.TokenType.LB_LEFT;\n\t        } else if (clone.isNumber()) {\n\t          clone.type = _tokenType.TokenType.NUMBER;\n\t        } else if (clone.isPowerSign()) {\n\t          clone.type = _tokenType.TokenType.POWER;\n\t        }\n\t      }\n\t\n\t      return clone;\n\t    }\n\t  }]);\n\t\n\t  return Token;\n\t}();\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TokenStream = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _ltrim = __webpack_require__(9);\n\t\n\tvar _ltrim2 = _interopRequireDefault(_ltrim);\n\t\n\tvar _rtrim = __webpack_require__(13);\n\t\n\tvar _rtrim2 = _interopRequireDefault(_rtrim);\n\t\n\tvar _message = __webpack_require__(2);\n\t\n\tvar _messageList = __webpack_require__(3);\n\t\n\tvar _token = __webpack_require__(7);\n\t\n\tvar _tokenType = __webpack_require__(6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Converts an input stream into tokens\n\t */\n\t\n\tvar TokenStream = exports.TokenStream = function () {\n\t\n\t  // Regular expressions used for converting text to tokens\n\t\n\t\n\t  // List of characters that should be interpreted as spaces\n\t\n\t  function TokenStream() {\n\t    _classCallCheck(this, TokenStream);\n\t\n\t    this.reset();\n\t    this.errors = new _messageList.MessageList();\n\t  }\n\t\n\t  /**\n\t   * Calculates hash for the TokenStream to determine whether it was changed or not\n\t   *\n\t   * @memberOf TokenStream\n\t   * @returns {string}\n\t   */\n\t\n\t\n\t  // Maximum possible size of the token stream\n\t\n\t\n\t  _createClass(TokenStream, [{\n\t    key: 'getHash',\n\t    value: function getHash() {\n\t      var hash = '';\n\t      for (var i = this.tokens.length - 1; i >= 0; i--) {\n\t        hash = this.tokens[i].getHash() + hash;\n\t      }\n\t      return hash;\n\t    }\n\t\n\t    /**\n\t     * Resets TokenStream object to default empty state\n\t     */\n\t\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.raw = null;\n\t      this.tokens = [];\n\t      this.cursorPos = 0;\n\t    }\n\t\n\t    /**\n\t     * Skips spaces while converting text to tokens and recalculates the position of the cursor\n\t     */\n\t\n\t  }, {\n\t    key: 'skipSpaces',\n\t    value: function skipSpaces() {\n\t      for (var i = 0; i < this.temp.raw.length; i++) {\n\t        if (this.temp.raw.charAt(i) == '\\n') {\n\t          this.temp.row++;\n\t          this.temp.pos++;\n\t          this.temp.col = 0;\n\t        } else {\n\t          if (TokenStream.WHITESPACE.indexOf(this.temp.raw.charAt(i)) === -1) {\n\t            this.temp.raw = this.temp.raw.slice(i);\n\t            break;\n\t          }\n\t          this.temp.col++;\n\t          this.temp.pos++;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds token into the list of tokens\n\t     *\n\t     * @param {number} type\n\t     *    Type of a Token (among MathTokeType.*)\n\t     * @param {number} length\n\t     *    Length of a new token\n\t     * @param {number} [value]\n\t     *    Evaluated value of a token (for symbols and numbers).\n\t     * @param {boolean} [dontThrowException]\n\t     *    if is set to true, no TOKEN_FOUND_EXCEPTION is thrown.\n\t     */\n\t\n\t  }, {\n\t    key: 'addToken',\n\t    value: function addToken(type, length, value, dontThrowException) {\n\t      this.tokens.push(new _token.Token(type, this.temp.col, this.temp.row, this.temp.pos, this.temp.raw.slice(0, length), value));\n\t      this.temp.pos += length;\n\t      this.temp.col += length;\n\t      this.temp.raw = this.temp.raw.slice(length);\n\t      if (!dontThrowException) {\n\t        throw TokenStream.TOKEN_FOUND_EXCEPTION;\n\t      }\n\t    }\n\t\n\t    /**\n\t     *\n\t     * @param {string} newRaw\n\t     *    New raw string to be tokenized\n\t     *\n\t     * @returns {boolean}\n\t     *      true if a stream of tokens has changed since the last function call\n\t     */\n\t\n\t  }, {\n\t    key: 'tokenize',\n\t    value: function tokenize(newRaw) {\n\t      // Basic check for changes\n\t      if (newRaw === this.raw) {\n\t        return false;\n\t      }\n\t\n\t      // Basic check failed – tokenize the string\n\t      this.reset();\n\t      this.raw = newRaw;\n\t\n\t      // Initialize some temporary data needed while tokenizing\n\t      this.temp = {};\n\t      this.temp.raw = (0, _rtrim2.default)(newRaw);\n\t      this.temp.pos = 0;\n\t      this.temp.col = 0;\n\t      this.temp.row = 0;\n\t\n\t      // Extract tokens in a loop\n\t      for (var i = TokenStream.MAX_TOKEN_COUNT; i >= 0; i--) {\n\t\n\t        this.skipSpaces();\n\t\n\t        // Exit if reached an end of the input string\n\t        if (this.temp.raw == '') {\n\t          break;\n\t        }\n\t\n\t        // Extract a token from the beginning of an input string.\n\t        // #addToken throws TokenStream.TOKEN_FOUND_EXCEPTION.\n\t\n\t        try {\n\t          // Compound tokens part 1, see part 2 after all simple tokens\n\t          // -- “less or equal” or “more or equal” (≤ and ≥ are below)\n\t          if (this.temp.raw.charAt(0) == '<' || this.temp.raw.charAt(0) == '>') {\n\t            var searchString = (0, _ltrim2.default)(this.temp.raw.slice(1));\n\t            if (searchString.charAt(0) == '=') {\n\t              this.addToken(this.temp.raw.charAt(0) == '<' ? _tokenType.TokenType.LESS_EQUAL : _tokenType.TokenType.MORE_EQUAL, this.temp.raw.length - searchString.length + 1);\n\t            }\n\t          }\n\t          // -- error: use of ==\n\t          if (this.temp.raw.charAt(0) == '=') {\n\t            var searchString = _underscore2.default.ltrim(this.temp.raw.slice(1));\n\t            if (searchString.charAt(0) == '=') {\n\t              this.addToken(_tokenType.TokenType.E_EQUALEQUAL, this.temp.raw.length - searchString.length + 1);\n\t            }\n\t          }\n\t\n\t          // -- error: Use of ** for power instead of ^\n\t          if (this.temp.raw.charAt(0) == '*') {\n\t            var searchString = _underscore2.default.ltrim(this.temp.raw.slice(1));\n\t            if (searchString.charAt(0) == '*') {\n\t              this.addToken(_tokenType.TokenType.E_STARSTAR, this.temp.raw.length - searchString.length + 1);\n\t            }\n\t          }\n\t\n\t          // simple tokens (1 character long)\n\t          /* eslint-disable no-fallthrough */\n\t          switch (this.temp.raw.charAt(0)) {\n\t            // -- left bracket\n\t            case '(':\n\t              this.addToken(_tokenType.TokenType.RB_LEFT, 1);\n\t            // -- right bracket\n\t            case ')':\n\t              this.addToken(_tokenType.TokenType.RB_RIGHT, 1);\n\t            // -- comma\n\t            case ',':\n\t              this.addToken(_tokenType.TokenType.COMMA, 1);\n\t            // -- semicolon\n\t            case ';':\n\t              this.addToken(_tokenType.TokenType.SEMICOLON, 1);\n\t            // -- equal\n\t            case '=':\n\t              this.addToken(_tokenType.TokenType.EQUAL, 1);\n\t            // -- less\n\t            case '<':\n\t              this.addToken(_tokenType.TokenType.LESS, 1);\n\t            // -- more\n\t            case '>':\n\t              this.addToken(_tokenType.TokenType.MORE, 1);\n\t            // -- less or equal\n\t            case '≤':\n\t              this.addToken(_tokenType.TokenType.LESS, 1);\n\t            // -- more or equal\n\t            case '≥':\n\t              this.addToken(_tokenType.TokenType.MORE, 1);\n\t            // -- add\n\t            case '+':\n\t              this.addToken(_tokenType.TokenType.ADD, 1);\n\t            // -- subtract\n\t            case '-':\n\t            case '—':\n\t            case '−':\n\t            case '–':\n\t            case '―':\n\t              this.addToken(_tokenType.TokenType.SUBTRACT, 1);\n\t            // -- multiply\n\t            case '*':\n\t            case '×':\n\t            case '·':\n\t              this.addToken(_tokenType.TokenType.MULTIPLY, 1);\n\t            // -- divide\n\t            case '/':\n\t            case '÷':\n\t              this.addToken(_tokenType.TokenType.DIVIDE, 1);\n\t            // -- power\n\t            case '^':\n\t              this.addToken(_tokenType.TokenType.POWER, 1);\n\t            // -- error: use of right square bracket\n\t            case '[':\n\t              this.addToken(_tokenType.TokenType.E_SB_LEFT, 1);\n\t            // -- error: use of left square bracket\n\t            case ']':\n\t              this.addToken(_tokenType.TokenType.E_SB_RIGHT, 1);\n\t            // -- error: use of right curly bracket\n\t            case '{':\n\t              this.addToken(_tokenType.TokenType.E_CB_LEFT, 1);\n\t            // -- error: use of left curly bracket\n\t            case '}':\n\t              this.addToken(_tokenType.TokenType.E_CB_RIGHT, 1);\n\t            // -- error: Use of right angle bracket\n\t            case '⟨':\n\t              this.addToken(_tokenType.TokenType.E_AB_LEFT, 1);\n\t            // -- error: Use of left angle bracket\n\t            case '⟩':\n\t              this.addToken(_tokenType.TokenType.E_AB_RIGHT, 1);\n\t            // -- error: use of a vertical slash to get an absolute value\n\t            case '|':\n\t              this.addToken(_tokenType.TokenType.E_VERTICAL_SLASH, 1);\n\t            // -- error: use of a back slash to divide\n\t            case '\\\\':\n\t              this.addToken(_tokenType.TokenType.E_BACK_SLASH, 1);\n\t          }\n\t          /* eslint-enable */\n\t\n\t          // compound tokens, part 2\n\t          var match;\n\t\n\t          // -- symbol\n\t          match = this.temp.raw.match(TokenStream.RE_SYMBOL);\n\t          if (match) {\n\t            this.addToken(_tokenType.TokenType.SYMBOL, match[0].length, match[0].toLowerCase());\n\t          }\n\t\n\t          // -- error: malformed number\n\t          // (depending on output of regex match, length of the token is different)\n\t          match = this.temp.raw.match(TokenStream.RE_E_NUMBER_MALFORMED);\n\t          if (match && !_underscore2.default.isUndefined(match[4])) {\n\t            if (!_underscore2.default.isUndefined(match[4]) && match[4].length > 0) {\n\t              match[1] = match[1].slice(0, match[1].length - 1);\n\t            }\n\t            this.addToken(_tokenType.TokenType.E_NUMBER_MALFORMED, match[1].length, match[1].toLowerCase());\n\t          } else if (match) {\n\t            this.addToken(_tokenType.TokenType.E_NUMBER_MALFORMED, match[0].length, match[0].toLowerCase());\n\t          }\n\t\n\t          // -- error: a number in exponential notation\n\t          match = this.temp.raw.match(TokenStream.RE_E_NUMBER_EXPONENTIAL);\n\t          if (match) {\n\t            this.addToken(_tokenType.TokenType.E_NUMBER_EXPONENTIAL, match[0].length, Number(match[0].replace(/[Ее]/, 'E')));\n\t          }\n\t\n\t          // -- number\n\t          match = this.temp.raw.match(TokenStream.RE_NUMBER);\n\t          if (match) {\n\t            this.addToken(_tokenType.TokenType.NUMBER, match[0].length, Number(match[0]));\n\t          }\n\t\n\t          // -- error: misplaced dot (period)\n\t          if (this.temp.raw.charAt(0) == '.') {\n\t            this.addToken(_tokenType.TokenType.E_MISPLACED_DOT, 1);\n\t          }\n\t\n\t          // all possible search was performed, but the token was not found\n\t          // --> Unknown symbol\n\t          this.addToken(_tokenType.TokenType.E_UNKNOWN, 1);\n\t        } catch (e) {\n\t          if (e != TokenStream.TOKEN_FOUND_EXCEPTION) {\n\t            throw e;\n\t          }\n\t        }\n\t\n\t        // check whether a search loop is stuck\n\t        //TODO revise\n\t        // if (i == 0) {\n\t        //   Logger.log(\"Probably a never-ending loop during tokenizing.\");\n\t        // }\n\t      }\n\t\n\t      // check if the end of a sting has been reached\n\t      // and add E_REST token if more characters remain\n\t      if (this.temp.raw.length) {\n\t        this.addToken(_tokenType.TokenType.E_REST, this.temp.raw.length, null, true);\n\t      }\n\t\n\t      // add last token (special EOF token)\n\t      this.addToken(_tokenType.TokenType.EOF, 0, null, true);\n\t\n\t      // delete temporary variable\n\t      delete this.temp;\n\t\n\t      // check for changes using hash\n\t      var hash = this.getHash();\n\t      if (hash == this.oldHash) {\n\t        return false;\n\t      }\n\t      this.oldHash = hash;\n\t\n\t      // form a list of errors\n\t      this.errors.clear();\n\t\n\t      for (var i = this.tokens.length - 1; i >= 0; i--) {\n\t        if (this.tokens[i].isErrorToken()) {\n\t          this.errors.add(new _message.Message('e_lex_' + this.tokens[i].type, this.tokens[i].pos, this.tokens[i]));\n\t        }\n\t      }\n\t\n\t      // Reaching this point means that token stream has been changed\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Returns a specific token defined by its position or false if it cannot be obtained.\n\t     *\n\t     * @param {number} tokenPos\n\t     *    Position of a requested token.\n\t     * @param {boolean} [moveCursor=false]\n\t     *    Set to true if cursor position needs to be changed.\n\t     *\n\t     * @returns {?Token}\n\t     *      Token or null if the search was out of range.\n\t     */\n\t\n\t  }, {\n\t    key: 'getToken',\n\t    value: function getToken(tokenPos, moveCursor) {\n\t      if (moveCursor) {\n\t        this.cursorPos = tokenPos;\n\t      }\n\t\n\t      if (this.cursorPos >= this.tokens.length) {\n\t        this.cursorPos = this.tokens.length - 1;\n\t      }\n\t\n\t      if (_underscore2.default.isUndefined(this.tokens[tokenPos])) {\n\t        return null;\n\t      }\n\t\n\t      return this.tokens[tokenPos];\n\t    }\n\t\n\t    /**\n\t     * Returns the first token of the stream.\n\t     *\n\t     * @param {boolean} [moveCursor=false]\n\t     *    Set to true if cursor position needs to be changed.\n\t     *\n\t     * @returns {Token}\n\t     *      Token or null if the search was out of range.\n\t     */\n\t\n\t  }, {\n\t    key: 'firstToken',\n\t    value: function firstToken(moveCursor) {\n\t      return this.getToken(0, moveCursor);\n\t    }\n\t\n\t    /**\n\t     * Returns the last token of the stream.\n\t     * IMPORTANT NOTICE: The “last” token is not the EOF token, but the token before it.\n\t     *\n\t     * @param {boolean} [moveCursor=false]\n\t     *    Set to true if cursor position needs to be changed.\n\t     *\n\t     * @returns {Token}\n\t     *      Token or null if the search was out of range.\n\t     */\n\t\n\t  }, {\n\t    key: 'lastToken',\n\t    value: function lastToken(moveCursor) {\n\t      return this.getToken(this.tokens.length - 2, moveCursor);\n\t    }\n\t\n\t    /**\n\t     * Returns the previous token of the stream.\n\t     *\n\t     * @param {boolean} [moveCursor=false]\n\t     *    Set to true if cursor position needs to be changed.\n\t     *\n\t     * @returns {Token}\n\t     *      Token or null if the search was out of range.\n\t     */\n\t\n\t  }, {\n\t    key: 'previousToken',\n\t    value: function previousToken(moveCursor) {\n\t      return this.getToken(this.cursorPos - 1, moveCursor);\n\t    }\n\t\n\t    /**\n\t     * Returns the next token of the stream.\n\t     *\n\t     * @param {boolean} [moveCursor=false]\n\t     *    Set to true if cursor position needs to be changed.\n\t     *\n\t     * @returns {Token}\n\t     *      Token or null if the search was out of range.\n\t     */\n\t\n\t  }, {\n\t    key: 'nextToken',\n\t    value: function nextToken(moveCursor) {\n\t      return this.getToken(this.cursorPos + 1, moveCursor);\n\t    }\n\t\n\t    /**\n\t     * Returns current token of the stream.\n\t     *\n\t     * @returns {Token}\n\t     */\n\t\n\t  }, {\n\t    key: 'currentToken',\n\t    value: function currentToken() {\n\t      return this.getToken(this.cursorPos);\n\t    }\n\t\n\t    /**\n\t     * Searches for a token of the specific type (or types)\n\t     * in the rest of the token stream (from cursor).\n\t     *\n\t     * @param {Array} tokenTypes\n\t     *    List of tokens to be searched.\n\t     * @param {boolean} [moveCursor=false]\n\t     *    Set to true if cursor position needs to be changed.\n\t     *\n\t     * @returns {?Token} Token or null if the search was out of range.\n\t     */\n\t\n\t  }, {\n\t    key: 'findNextToken',\n\t    value: function findNextToken(tokenTypes, moveCursor) {\n\t      if (!_underscore2.default.isArray(tokenTypes)) {\n\t        tokenTypes = [tokenTypes];\n\t      }\n\t\n\t      for (var i = this.cursorPos; i < this.tokens.length; i++) {\n\t        var currentToken = this.getToken(i);\n\t        for (var type in tokenTypes) {\n\t          if (tokenTypes[type] == currentToken.type) {\n\t            if (moveCursor) {\n\t              this.cursorPos = i;\n\t            }\n\t            return currentToken;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Searches for a token of the specific type (or types) in the rest\n\t     * of the token stream (from cursor) with respect to opening / closing brackets.\n\t     *\n\t     * @param {Array} tokenTypes\n\t     *    List of tokens to be searched.\n\t     * @param {boolean} [moveCursor=false]\n\t     *    Set to true if cursor position needs to be changed.\n\t     *\n\t     * @returns {?Token} Token or null if the search was out of range.\n\t     */\n\t\n\t  }, {\n\t    key: 'findNextTokenAtTheSameLevel',\n\t    value: function findNextTokenAtTheSameLevel(tokenTypes, moveCursor) {\n\t      if (!_underscore2.default.isArray(tokenTypes)) {\n\t        tokenTypes = [tokenTypes];\n\t      }\n\t\n\t      var level = 0;\n\t\n\t      for (var i = this.cursorPos; i < this.tokens.length; i++) {\n\t        if (level < 0) {\n\t          return null;\n\t        }\n\t\n\t        var currentToken = this.getToken(i);\n\t\n\t        if (currentToken.isLeftBracket()) {\n\t          ++level;\n\t        }\n\t\n\t        if (level == 0) {\n\t          for (var type in tokenTypes) {\n\t            if (tokenTypes[type] == currentToken.type) {\n\t              if (moveCursor) {\n\t                this.cursorPos = i;\n\t              }\n\t              return currentToken;\n\t            }\n\t          }\n\t        }\n\t\n\t        if (currentToken.isRightBracket()) {\n\t          --level;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return TokenStream;\n\t}();\n\t\n\tTokenStream.MAX_TOKEN_COUNT = 500;\n\tTokenStream.WHITESPACE = ' \\n\\r\\t\\f\\u000b            ​\\u2028\\u2029　';\n\tTokenStream.TOKEN_FOUND_EXCEPTION = 42;\n\tTokenStream.RE_NUMBER = /^[0-9]+(\\.[0-9]+)?/;\n\tTokenStream.RE_SYMBOL = /^[a-zA-Zа-яА-ЯёЁα-ωΑ-Ω][_a-zA-Zа-яА-ЯёЁα-ωΑ-Ω0-9]*/;\n\tTokenStream.RE_E_NUMBER_MALFORMED = /^(\\.[0-9]+|[0-9]+(\\.[0-9]+){2,}|([0-9]+\\.([^0-9]|$)))/;\n\tTokenStream.RE_E_NUMBER_EXPONENTIAL = /^[0-9]+(\\.[0-9]+)?[EeЕе][+-]?[0-9]+/;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar makeString = __webpack_require__(10);\n\tvar defaultToWhiteSpace = __webpack_require__(11);\n\tvar nativeTrimLeft = String.prototype.trimLeft;\n\t\n\tmodule.exports = function ltrim(str, characters) {\n\t  str = makeString(str);\n\t  if (!characters && nativeTrimLeft) return nativeTrimLeft.call(str);\n\t  characters = defaultToWhiteSpace(characters);\n\t  return str.replace(new RegExp('^' + characters + '+'), '');\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Ensure some object is a coerced to a string\n\t **/\n\tmodule.exports = function makeString(object) {\n\t  if (object == null) return '';\n\t  return '' + object;\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar escapeRegExp = __webpack_require__(12);\n\t\n\tmodule.exports = function defaultToWhiteSpace(characters) {\n\t  if (characters == null)\n\t    return '\\\\s';\n\t  else if (characters.source)\n\t    return characters.source;\n\t  else\n\t    return '[' + escapeRegExp(characters) + ']';\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar makeString = __webpack_require__(10);\n\t\n\tmodule.exports = function escapeRegExp(str) {\n\t  return makeString(str).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n\t};\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar makeString = __webpack_require__(10);\n\tvar defaultToWhiteSpace = __webpack_require__(11);\n\tvar nativeTrimRight = String.prototype.trimRight;\n\t\n\tmodule.exports = function rtrim(str, characters) {\n\t  str = makeString(str);\n\t  if (!characters && nativeTrimRight) return nativeTrimRight.call(str);\n\t  characters = defaultToWhiteSpace(characters);\n\t  return str.replace(new RegExp(characters + '+$'), '');\n\t};\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Types of nodes in a syntax tree\n\t */\n\t\n\tvar TreeNodeType = exports.TreeNodeType = function TreeNodeType() {\n\t  _classCallCheck(this, TreeNodeType);\n\t};\n\t\n\tTreeNodeType.EMPTY = 0;\n\tTreeNodeType.SEQUENCE_OF_STATEMENTS = 1;\n\tTreeNodeType.STATEMENT = 2;\n\tTreeNodeType.EXPRESSION = 3;\n\tTreeNodeType.TERM = 4;\n\tTreeNodeType.POWER = 5;\n\tTreeNodeType.SYMBOL = 6;\n\tTreeNodeType.NUMBER = 7;\n\tTreeNodeType.FUNCTION = 8;\n\tTreeNodeType.STANDARD_CONSTANT = 32;\n\tTreeNodeType.STANDARD_VARIABLE = 33;\n\tTreeNodeType.STANDARD_FUNCTION = 34;\n\tTreeNodeType.STATEMENT_EQUATION = 66;\n\tTreeNodeType.STATEMENT_INEQUALITY = 67;\n\tTreeNodeType.E_UNPARSED = 128;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TreeNode = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _treeNodeType = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Part of Tree\n\t */\n\t\n\tvar TreeNode = exports.TreeNode = function () {\n\t  function TreeNode() {\n\t    _classCallCheck(this, TreeNode);\n\t\n\t    this.type = _treeNodeType.TreeNodeType.EMPTY;\n\t    this.brackets = false;\n\t    this.hasErrors = false;\n\t  }\n\t\n\t  /**\n\t   * Checks if the node is empty.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\t\n\t\n\t  _createClass(TreeNode, [{\n\t    key: 'isEmpty',\n\t    value: function isEmpty() {\n\t      return this.type == _treeNodeType.TreeNodeType.EMPTY;\n\t    }\n\t\n\t    /**\n\t     * Checks if the node is unparsed\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isUnparsed',\n\t    value: function isUnparsed() {\n\t      return this.type == _treeNodeType.TreeNodeType.UNPARSED;\n\t    }\n\t  }]);\n\t\n\t  return TreeNode;\n\t}();\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tree = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _message = __webpack_require__(2);\n\t\n\tvar _messageList = __webpack_require__(3);\n\t\n\tvar _pos = __webpack_require__(5);\n\t\n\tvar _tokenType = __webpack_require__(6);\n\t\n\tvar _token = __webpack_require__(7);\n\t\n\tvar _treeNodeType = __webpack_require__(14);\n\t\n\tvar _treeNode = __webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Creates an empty instance of Tree object\n\t */\n\t\n\tvar Tree = exports.Tree = function () {\n\t  function Tree() {\n\t    _classCallCheck(this, Tree);\n\t\n\t    this.reset();\n\t    this.errors = new _messageList.MessageList();\n\t  }\n\t\n\t  /**\n\t   * Calculates hash for the Tree to determine whether it was changed or not\n\t   */\n\t\n\t\n\t  _createClass(Tree, [{\n\t    key: 'getHash',\n\t    value: function getHash() {}\n\t    //TODO Implement the method\n\t\n\t\n\t    /**\n\t     * Resets the tree to a default empty state.\n\t     */\n\t\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.tokenStream = null;\n\t      this.root = null;\n\t    }\n\t\n\t    /**\n\t     * Parses an input stream into a tree of TreeNodes\n\t     *\n\t     * @param {Object} tokenStream\n\t     *    incoming token stream\n\t     *\n\t     * @returns {boolean}\n\t     *      true if the tree was changed.\n\t     */\n\t\n\t  }, {\n\t    key: 'parse',\n\t    value: function parse(tokenStream) {\n\t      this.reset();\n\t      this.errors.clear();\n\t\n\t      this.tokenStream = tokenStream;\n\t\n\t      // Check for missed operands between operators\n\t      // This check is separated because actual parsing ignores errors at some token sequences\n\t      // (e.g. MINUS PLUS) in order to collect as much more errors as possible.\n\t      this.checkForMissedOperands();\n\t\n\t      // Move token stream cursor to the first position\n\t      this.tokenStream.firstToken(true);\n\t\n\t      // Parse the distinguished symbol of the grammar\n\t      this.root = this.subparseStatementSequence();\n\t\n\t      // Check if an end of Token Stream was reached.\n\t      if (this.tokenStream.currentToken().type != _tokenType.TokenType.EOF) {\n\t        this.errors.add(new _message.Message('e_syn_unknown', this.tokenStream.currentToken().pos));\n\t      }\n\t\n\t      //XXX return false when no change occurred\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Parses a sequence of statements, which is\n\t     * 'statement [SEMICOLON statement ...]'\n\t     *\n\t     * @returns {TreeNode}\n\t     */\n\t\n\t  }, {\n\t    key: 'subparseStatementSequence',\n\t    value: function subparseStatementSequence() {\n\t\n\t      var currentNode = this.createEmptyTreeNode();\n\t      var firstNodeToken = this.tokenStream.currentToken();\n\t\n\t      // Extract the first possible sub-node (statement)\n\t      var currentSubNode = this.subparseStatement();\n\t\n\t      ////////////////////////////////\n\t      // Expression matches a pattern statement [SEMICOLON statement ...]\n\t      ////////////////////////////////\n\t      currentNode.subNodes = [];\n\t      currentNode.subActions = [];\n\t      currentNode.type = _treeNodeType.TreeNodeType.SEQUENCE_OF_STATEMENTS;\n\t\n\t      // Run till EOF to get all possible errors and statements\n\t      while (!this.tokenStream.currentToken().isEOF()) {\n\t        // If The statement separator is semicolon (or a comma, which is an error)\n\t        if (this.tokenStream.currentToken().type == _tokenType.TokenType.SEMICOLON || this.tokenStream.currentToken().type == _tokenType.TokenType.COMMA) {\n\t\n\t          // Add sub-action (semicolon or comma position must be kept)\n\t          currentNode.subActions.push(this.tokenStream.currentToken());\n\t\n\t          // If a separator is a comma, report an error\n\t          if (this.tokenStream.currentToken().type == _tokenType.TokenType.COMMA) {\n\t            this.errors.add(new _message.Message('e_syn_statements_comma', this.tokenStream.currentToken().pos));\n\t          }\n\t\n\t          // If any other token found on the way\n\t        } else {\n\t\n\t            // If error token found on the way, just skip to the next semicolon or to the end of the stream.\n\t            // Otherwise add an error.\n\t\n\t            // Case 1: Right bracket found\n\t            if (this.tokenStream.currentToken().isRightBracket()) {\n\t              this.errors.add(new _message.Message('e_syn_extra_rb', this.tokenStream.currentToken().pos, { currentToken: this.tokenStream.currentToken() }));\n\t              // Case 2: Non-error token found\n\t            } else if (!this.tokenStream.currentToken().isErrorToken()) {\n\t                this.errors.add(new _message.Message('e_syn_statements_wrong_symbol', this.tokenStream.currentToken().pos, { currentToken: this.tokenStream.currentToken() }));\n\t                // Case 3: Any other token found\n\t              } else {}\n\t                // Do nothing\n\t\n\t\n\t                // Skip to the next SEMICOLON or to the end of the stream or to the last token\n\t            if (!this.tokenStream.findNextToken([_tokenType.TokenType.SEMICOLON], true)) {\n\t              this.tokenStream.lastToken(true);\n\t            } else {\n\t              // Add sub-action (semicolon position must be kept)\n\t              currentNode.subActions.push(this.tokenStream.currentToken());\n\t              this.tokenStream.previousToken(true);\n\t            }\n\t\n\t            // If the content of the parsed part of the expression is a single\n\t            // factor, add it as the sub-node for this expression.\n\t            // This is made for further semantic check of it.\n\t            if (currentSubNode.type == _treeNodeType.TreeNodeType.SYMBOL || currentSubNode.type == _treeNodeType.TreeNodeType.NUMBER || currentSubNode.type == _treeNodeType.TreeNodeType.FUNCTION) {\n\t              currentSubNode = this.wrapNode(currentSubNode);\n\t            }\n\t\n\t            currentSubNode.type = _treeNodeType.TreeNodeType.E_UNPARSED;\n\t            currentSubNode.hasErrors = true;\n\t\n\t            currentSubNode.pos = _pos.Pos.unite(currentSubNode.pos, this.tokenStream.currentToken().pos);\n\t            if (this.tokenStream.currentToken() != this.tokenStream.lastToken()) {\n\t              this.tokenStream.nextToken(true);\n\t            }\n\t          }\n\t\n\t        // Move forward\n\t        this.tokenStream.nextToken(true);\n\t        currentNode.subNodes.push(currentSubNode);\n\t        currentSubNode = this.subparseStatement();\n\t      }\n\t      currentNode.subNodes.push(currentSubNode);\n\t\n\t      ////////////////////////////////\n\t      // Sequence is just a single statement\n\t      ////////////////////////////////\n\t      if (currentNode.subNodes.length == 1 || currentNode.subActions.length == 0) {\n\t        return currentNode.subNodes[0];\n\t      }\n\t\n\t      // Remove empty sub-node after the last semicolon\n\t      if (currentNode.subNodes[currentNode.subNodes.length - 1].isEmpty()) {\n\t        delete currentNode.subNodes[currentNode.subNodes.length - 1];\n\t      }\n\t\n\t      // Get the position of the current node\n\t      currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.currentToken().pos);\n\t\n\t      return currentNode;\n\t    }\n\t\n\t    /**\n\t     * Parses a statement, which is\n\t     * 'expression [(EQUAL|LESS|MORE|MORE_EQUAL|LESS_EQUAL) expression]'\n\t     * A statement can consist of one or two parts only.\n\t     *\n\t     * @returns {TreeNode}\n\t     */\n\t\n\t  }, {\n\t    key: 'subparseStatement',\n\t    value: function subparseStatement() {\n\t      var currentNode = this.createEmptyTreeNode();\n\t      var firstNodeToken = this.tokenStream.currentToken();\n\t\n\t      var leftPart = this.subparseExpression();\n\t      var rightPart = null;\n\t      var statementSign = null;\n\t\n\t      ////////////////////////////////\n\t      // Statement is expression (EQUAL|LESS|MORE|MORE_EQUAL|LESS_EQUAL) whatever\n\t      ////////////////////////////////\n\t\n\t      if (this.tokenStream.currentToken().isStatementSign()) {\n\t\n\t        // Save the sign and parsing the right part\n\t        statementSign = this.tokenStream.currentToken();\n\t        this.tokenStream.nextToken(true);\n\t        rightPart = this.subparseExpression();\n\t\n\t        // Check both parts for emptiness\n\t        if (leftPart.isEmpty()) {\n\t          this.errors.add(new _message.Message('e_syn_statement_empty_left', leftPart.pos, {\n\t            currentToken: statementSign\n\t          }));\n\t        }\n\t        if (rightPart.isEmpty()) {\n\t          this.errors.add(new _message.Message('e_syn_statement_empty_right', rightPart.pos, {\n\t            currentToken: statementSign\n\t          }));\n\t        }\n\t\n\t        // Add left part and right part as node sub-nodes\n\t        currentNode.type = _treeNodeType.TreeNodeType.STATEMENT;\n\t        currentNode.subNodes = [leftPart, rightPart];\n\t        currentNode.subActions = [statementSign];\n\t\n\t        ////////////////////////////////\n\t        // Define sub-type depending on what is in the left and the right parts\n\t\n\t        switch (statementSign.type) {\n\t          // The statement is an inequality\n\t          case _tokenType.TokenType.LESS:\n\t          case _tokenType.TokenType.MORE:\n\t          case _tokenType.TokenType.LESS_EQUAL:\n\t          case _tokenType.TokenType.MORE_EQUAL:\n\t            currentNode.subType = _treeNodeType.TreeNodeType.STATEMENT_INEQUALITY;\n\t            break;\n\t\n\t          // The statement is something separated with an EQUAL sign\n\t          //TODO detect STATEMENT_DEFINITION_VARIABLE, STATEMENT_DEFINITION_FUNCTION\n\t          default:\n\t            currentNode.subType = _treeNodeType.TreeNodeType.STATEMENT_EQUATION;\n\t            break;\n\t        }\n\t\n\t        // Check if there are any other statement signs (which is an error)\n\t        while (this.tokenStream.currentToken().isStatementSign()) {\n\t          currentNode.hasErrors = true;\n\t\n\t          this.errors.add(new _message.Message('e_syn_statement_extra_statement_sign', this.tokenStream.currentToken().pos, {\n\t            currentToken: this.tokenStream.currentToken(),\n\t            statementSign: statementSign\n\t          }));\n\t\n\t          currentNode.subActions.push(this.tokenStream.currentToken());\n\t          this.tokenStream.nextToken(true);\n\t          currentNode.subNodes.push(this.subparseExpression());\n\t        }\n\t\n\t        currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.previousToken().pos);\n\t        return currentNode;\n\t\n\t        ///////////////////////////////////\n\t        // Statement is just a single expression\n\t        ///////////////////////////////////\n\t      } else {\n\t          return leftPart;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Parses an expression, which is\n\t     * 'term [(ADD|SUBTRACT) term [(ADD|SUBTRACT) term ...]]'\n\t     *\n\t     * @returns {TreeNode}\n\t     */\n\t\n\t  }, {\n\t    key: 'subparseExpression',\n\t    value: function subparseExpression() {\n\t      var currentNode = this.createEmptyTreeNode();\n\t      var firstNodeToken = this.tokenStream.currentToken();\n\t\n\t      // Extract the first possible sub-node (term)\n\t      var currentSubNode = this.subparseTerm();\n\t\n\t      // /////////////////////////////////\n\t      // Expression is just a single term\n\t      // /////////////////////////////////\n\t      if (!this.tokenStream.currentToken().isExpressionSign()) {\n\t        return currentSubNode;\n\t      }\n\t\n\t      // //////////////////////////////\n\t      // Expression matches a pattern term (ADD|) term [(ADD|SUBTRACT) term ...]\n\t      // //////////////////////////////\n\t      currentNode.subNodes = [currentSubNode];\n\t      currentNode.subActions = [];\n\t      currentNode.type = _treeNodeType.TreeNodeType.EXPRESSION;\n\t\n\t      while (this.tokenStream.currentToken().isExpressionSign()) {\n\t\n\t        // Add sub-action\n\t        currentNode.subActions.push(this.tokenStream.currentToken());\n\t\n\t        // If a child is empty and it is not the first term parsed,\n\t        // mark node as one with errors\n\t        if (currentSubNode.isEmpty() && currentNode.subNodes.length != 1) {\n\t          currentNode.hasErrors = true;\n\t        }\n\t\n\t        // Move forward\n\t        this.tokenStream.nextToken(true);\n\t        currentSubNode = this.subparseTerm();\n\t        currentNode.subNodes.push(currentSubNode);\n\t      }\n\t\n\t      // If any of sub-nodes contains errors, mark a node as the one with error\n\t      _underscore2.default.each(currentNode.subNodes, function (subNode) {\n\t        if (subNode.hasErrors) {\n\t          currentNode.hasErrors = true;\n\t          _underscore2.default.breakLoop();\n\t        }\n\t      });\n\t\n\t      // Work out case SUBTRACT term.\n\t      // Replace first empty sub-node with number (0)\n\t      if (currentNode.subNodes[0].isEmpty()) {\n\t        if (currentNode.subActions[0].type == _tokenType.TokenType.SUBTRACT) {\n\t          currentNode.subNodes[0].type = _treeNodeType.TreeNodeType.NUMBER;\n\t          currentNode.subNodes[0].value = 0;\n\t        } else {\n\t          currentNode.hasErrors = true;\n\t        }\n\t      }\n\t\n\t      // Get the position of the current node\n\t      currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.previousToken().pos);\n\t\n\t      return currentNode;\n\t    }\n\t\n\t    /**\n\t     * Parses a term, which is\n\t     * 'power [(MULTIPLY/DIVIDE) power [(MULTIPLY/DIVIDE) power ...]]'\n\t     *\n\t     * @returns {TreeNode}\n\t     */\n\t\n\t  }, {\n\t    key: 'subparseTerm',\n\t    value: function subparseTerm() {\n\t      var currentNode = this.createEmptyTreeNode();\n\t      var firstNodeToken = this.tokenStream.currentToken();\n\t      currentNode.type = _treeNodeType.TreeNodeType.TERM;\n\t\n\t      // Extract the first possible sub-node (power)\n\t      var currentSubNode = this.subparsePower();\n\t\n\t      ////////////////////////////////\n\t      // Term matches pattern 'power(MULTIPLY|DIVIDE|)power [...]'\n\t      ////////////////////////////////\n\t      currentNode.subNodes = [currentSubNode];\n\t      currentNode.subActions = [];\n\t\n\t      for (;;) {\n\t        // If the next token is a (MULTIPLY|DIVIDE)\n\t        // or any error token but those that subdivide statements\n\t        if (this.tokenStream.currentToken().isTermSign() || this.tokenStream.currentToken().isErrorToken() && !this.tokenStream.currentToken().isStatementSign() && !this.tokenStream.currentToken().isNumber() && !this.tokenStream.currentToken().isLeftBracket() && !this.tokenStream.currentToken().isRightBracket()) {\n\t          if (this.tokenStream.currentToken().isErrorToken()) {\n\t            currentNode.hasErrors = true;\n\t          }\n\t          currentNode.subActions.push(this.tokenStream.currentToken());\n\t\n\t          this.tokenStream.nextToken(true);\n\t          currentSubNode = this.subparsePower();\n\t          currentNode.subNodes.push(currentSubNode);\n\t\n\t          // Check the case of missing sign MULTIPLE,\n\t          // e.g NUMBER SYMBOL or NUMBER LB\n\t        } else if (this.tokenStream.currentToken().isNumber() || this.tokenStream.currentToken().isLeftBracket() || this.tokenStream.currentToken().isSymbol()) {\n\t            if (this.tokenStream.previousToken().isNumber() && (this.tokenStream.currentToken().isSymbol() || this.tokenStream.currentToken().isLeftBracket())) {\n\t              // It is still not an error in case NUMBER SYMBOL or NUMBER LB\n\t              // or the previous token is an error token\n\t            } else {\n\t                currentNode.hasErrors = true;\n\t\n\t                // An error will show up only if the previous token\n\t                //  is not an error token or any number token\n\t                if (!(this.tokenStream.previousToken().isErrorToken() && !this.tokenStream.previousToken().isMathOperator()) || this.tokenStream.previousToken().isNumber()) {\n\t                  this.errors.add(new _message.Message('e_syn_missing_multiply', _pos.Pos.between(this.tokenStream.previousToken().pos, this.tokenStream.currentToken().pos), {\n\t                    previousToken: this.tokenStream.previousToken().cloneWithCorrectedType(),\n\t                    currentToken: this.tokenStream.currentToken().cloneWithCorrectedType()\n\t                  }));\n\t                }\n\t              }\n\t\n\t            var pseudoMultiplyToken = new _token.Token(_tokenType.TokenType.MULTIPLY);\n\t            pseudoMultiplyToken.pos = _pos.Pos.between(this.tokenStream.previousToken().pos, this.tokenStream.currentToken().pos);\n\t\n\t            currentNode.subActions.push(pseudoMultiplyToken);\n\t            currentSubNode = this.subparsePower();\n\t            currentNode.subNodes.push(currentSubNode);\n\t\n\t            // If any error token found, use it to split sub-nodes and parse further nodes\n\t          } else {\n\t              break;\n\t            }\n\t      }\n\t\n\t      ///////////////////////////////\n\t      // Term is a single power (only one sub-node found)\n\t      ///////////////////////////////\n\t      if (currentNode.subNodes.length == 1) {\n\t        return currentNode.subNodes[0];\n\t      }\n\t\n\t      // If any of sub-nodes is empty or contains error,\n\t      // mark a node as the one with error.\n\t      _underscore2.default.each(currentNode.subNodes, function (subNode) {\n\t        if (subNode.hasErrors || subNode.type == _treeNodeType.TreeNodeType.EMPTY) {\n\t          currentNode.hasErrors = true;\n\t          _underscore2.default.breakLoop();\n\t        }\n\t      });\n\t\n\t      // Get the position of the current node\n\t      currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.previousToken().pos);\n\t\n\t      currentNode.type = _treeNodeType.TreeNodeType.TERM;\n\t      return currentNode;\n\t    }\n\t\n\t    /**\n\t     * Parses a power, which is\n\t     * 'factor [(POWER) factor [(POWER) factor ...]]'\n\t     *\n\t     * @returns {TreeNode}\n\t     */\n\t\n\t  }, {\n\t    key: 'subparsePower',\n\t    value: function subparsePower() {\n\t      var currentNode = this.createEmptyTreeNode();\n\t      var firstNodeToken = this.tokenStream.currentToken();\n\t\n\t      // Extract the first possible sub-node (power)\n\t      var currentSubNode = this.subparseFactor();\n\t\n\t      //////////////////////////////\n\t      // Power is just a single factor\n\t      //////////////////////////////\n\t      if (!this.tokenStream.currentToken().isPowerSign()) {\n\t        return currentSubNode;\n\t      }\n\t\n\t      //////////////////////////////\n\t      // Power matches a pattern factor (POWER) factor [(POWER)factor) ...]\n\t      //////////////////////////////\n\t      currentNode.subNodes = [currentSubNode];\n\t      currentNode.subActions = [];\n\t\n\t      while (this.tokenStream.currentToken().isPowerSign()) {\n\t        currentNode.subActions.push(this.tokenStream.currentToken().type);\n\t\n\t        this.tokenStream.nextToken(true);\n\t        currentSubNode = this.subparseFactor();\n\t        currentNode.subNodes.push(currentSubNode);\n\t      }\n\t\n\t      // If any of sub-nodes is empty or contains error,\n\t      // mark a node as the one with error\n\t      _underscore2.default.each(currentNode.subNodes, function (subNode) {\n\t        if (subNode.hasErrors || subNode.type == _treeNodeType.TreeNodeType.EMPTY) {\n\t          currentNode.hasErrors = true;\n\t          _underscore2.default.breakLoop();\n\t        }\n\t      });\n\t\n\t      // Get the position of the current node\n\t      currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.previousToken().pos);\n\t\n\t      currentNode.type = _treeNodeType.TreeNodeType.POWER;\n\t      return currentNode;\n\t    }\n\t\n\t    /**\n\t     * Parses a factor, which can be a number, a symbol, a function\n\t     * (symbol with the following left bracket) or an expression in braces.\n\t     *\n\t     * @returns {TreeNode}\n\t     */\n\t\n\t  }, {\n\t    key: 'subparseFactor',\n\t    value: function subparseFactor() {\n\t      var currentNode = this.createEmptyTreeNode();\n\t      var firstNodeToken = this.tokenStream.currentToken();\n\t\n\t      // Depending on the type of a token, parse a factor differently\n\t      if (firstNodeToken.isNumber()) {\n\t\n\t        /////////////////////\n\t        // Factor is a Number\n\t        /////////////////////\n\t\n\t        currentNode.type = _treeNodeType.TreeNodeType.NUMBER;\n\t        currentNode.pos = this.tokenStream.currentToken().pos;\n\t        currentNode.value = this.tokenStream.currentToken().value;\n\t        this.tokenStream.nextToken(true);\n\t\n\t        return currentNode;\n\t\n\t        // Factor is a function or a symbol\n\t      } else if (firstNodeToken.type == _tokenType.TokenType.SYMBOL) {\n\t\n\t          // Check for a left bracket after the symbol\n\t          if (this.tokenStream.nextToken().isLeftBracket()) {\n\t\n\t            ///////////////////////\n\t            // Factor is a function\n\t            ///////////////////////\n\t\n\t            currentNode.type = _treeNodeType.TreeNodeType.FUNCTION;\n\t            currentNode.name = this.tokenStream.currentToken().value;\n\t            currentNode.namePos = this.tokenStream.currentToken().pos;\n\t            currentNode.nameRaw = this.tokenStream.currentToken().raw;\n\t            currentNode.subNodes = [];\n\t\n\t            // Skip over a left bracket and remember the position\n\t            // of the beginning of the arguments\n\t            this.tokenStream.nextToken(true);\n\t            currentNode.argumentPos = _pos.Pos.ending(this.tokenStream.currentToken().pos);\n\t            this.tokenStream.nextToken(true);\n\t\n\t            // Parse arguments\n\t            if (this.tokenStream.currentToken().isRightBracket()) {\n\t\n\t              //////////////////////////////////////\n\t              // Case one: Function has no arguments\n\t\n\t              // Get the position of the current node\n\t              currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.currentToken().pos);\n\t\n\t              // Update the position of the arguments\n\t              currentNode.argumentPos = _pos.Pos.between(currentNode.argumentPos, this.tokenStream.currentToken().pos);\n\t\n\t              // Move cursor one token right\n\t              this.tokenStream.nextToken(true);\n\t\n\t              return currentNode;\n\t            } else {\n\t\n\t              //////////////////////////////////////\n\t              // Case two: There is no right bracket after the left one\n\t              // Try to parse arguments\n\t\n\t              var currentArgument;\n\t\n\t              for (;;) {\n\t                // Get an argument, which is an expression\n\t                currentArgument = this.subparseExpression();\n\t\n\t                // Add an argument as a sub-node.\n\t                currentNode.subNodes.push(currentArgument);\n\t\n\t                if (this.tokenStream.currentToken().isRightBracket() || this.tokenStream.currentToken().type == _tokenType.TokenType.COMMA || this.tokenStream.currentToken().type == _tokenType.TokenType.SEMICOLON) {\n\t                  // Check if an argument is empty and add an error if so\n\t                  if (currentArgument.type == _treeNodeType.TreeNodeType.EMPTY) {\n\t                    currentArgument.pos = _pos.Pos.between(this.tokenStream.previousToken().pos, this.tokenStream.currentToken().pos);\n\t                    currentNode.hasErrors = true;\n\t                    this.errors.add(new _message.Message('e_syn_function_argument_empty', currentArgument.pos));\n\t                  }\n\t                }\n\t\n\t                // Check for a right bracket\n\t                if (this.tokenStream.currentToken().isRightBracket()) {\n\t                  // Get the position of the current node\n\t                  currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.currentToken().pos);\n\t\n\t                  // Update the position of the arguments\n\t                  currentNode.argumentPos = _pos.Pos.between(currentNode.argumentPos, this.tokenStream.currentToken().pos);\n\t\n\t                  // Skip a bracket and return a node\n\t                  this.tokenStream.nextToken(true);\n\t                  return currentNode;\n\t                }\n\t\n\t                // Right bracket not found – check for a comma or a semicolon\n\t                if (this.tokenStream.currentToken().type == _tokenType.TokenType.COMMA || this.tokenStream.currentToken().type == _tokenType.TokenType.SEMICOLON) {\n\t                  // It is an error if it is a semicolon\n\t                  if (this.tokenStream.currentToken().type == _tokenType.TokenType.SEMICOLON) {\n\t                    this.errors.add(new _message.Message('e_syn_function_argument_semicolon', this.tokenStream.currentToken().pos));\n\t                    currentNode.hasErrors = true;\n\t                  }\n\t                  // Skip over a comma / semicolon\n\t                  this.tokenStream.nextToken(true);\n\t                  continue;\n\t                }\n\t\n\t                // Any other token is unexpected here\n\t                currentNode.hasErrors = true;\n\t\n\t                if (!this.tokenStream.currentToken().isEOF()) {\n\t                  // If the content of the parsed part of the expression\n\t                  // is a single factor, add it as the sub-node for this expression.\n\t                  // This is made for further semantic check of it.\n\t                  if (currentArgument.type == _treeNodeType.TreeNodeType.SYMBOL || currentArgument.type == _treeNodeType.TreeNodeType.NUMBER || currentArgument.type == _treeNodeType.TreeNodeType.FUNCTION) {\n\t                    currentArgument = this.wrapNode(currentArgument);\n\t                    currentArgument.hasErrors = true;\n\t                    currentNode.subNodes.pop();\n\t                    currentNode.subNodes.push(currentArgument);\n\t                  }\n\t\n\t                  currentArgument.type = _treeNodeType.TreeNodeType.E_UNPARSED;\n\t                  if (!this.tokenStream.currentToken().isErrorToken()) {\n\t                    this.errors.add(new _message.Message('e_syn_function_argument_wrong_symbol', this.tokenStream.currentToken().pos, { currentToken: this.tokenStream.currentToken() }));\n\t                  }\n\t                }\n\t\n\t                // Look for the stop-symbol (next right bracket of the\n\t                // same level or a comma) to continue parsing after it\n\t                var stopSymbol = this.tokenStream.findNextTokenAtTheSameLevel([_tokenType.TokenType.RB_RIGHT, _tokenType.TokenType.E_SB_RIGHT, _tokenType.TokenType.COMMA, _tokenType.TokenType.SEMICOLON], true);\n\t\n\t                // A stop symbol was found\n\t                if (stopSymbol) {\n\t                  currentArgument.pos = _pos.Pos.unite(currentArgument.pos, this.tokenStream.previousToken().pos);\n\t\n\t                  // Continue if a stop-symbol is comma\n\t                  if (stopSymbol.type == _tokenType.TokenType.COMMA) {\n\t                    // Skip a comma\n\t                    this.tokenStream.nextToken(true);\n\t                    continue;\n\t                  }\n\t                  currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.currentToken().pos);\n\t                  this.tokenStream.nextToken(true);\n\t\n\t                  // A stop symbol was not found – move to the end of the TokenStream\n\t                } else {\n\t                    this.tokenStream.lastToken(true);\n\t                    currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.lastToken().pos);\n\t                    this.errors.add(new _message.Message('e_syn_missing_rb', _pos.Pos.ending(this.tokenStream.currentToken().pos)));\n\t                    this.tokenStream.nextToken(true);\n\t                  }\n\t\n\t                // Update the position of the arguments\n\t                currentNode.argumentPos = _pos.Pos.between(currentNode.argumentPos, this.tokenStream.previousToken().pos);\n\t                return currentNode;\n\t              }\n\t            }\n\t          } else {\n\t\n\t            //////////////////////////\n\t            // Factor is just a symbol\n\t            //////////////////////////\n\t\n\t            currentNode.type = _treeNodeType.TreeNodeType.SYMBOL;\n\t            currentNode.pos = this.tokenStream.currentToken().pos;\n\t            currentNode.name = this.tokenStream.currentToken().value;\n\t            currentNode.nameRaw = this.tokenStream.currentToken().raw;\n\t            this.tokenStream.nextToken(true);\n\t\n\t            return currentNode;\n\t          }\n\t        } else if (this.tokenStream.currentToken().isLeftBracket()) {\n\t\n\t          //////////////////////////////////////\n\t          // Factor is an expression in brackets\n\t          //////////////////////////////////////\n\t\n\t          // Skip left bracket\n\t          this.tokenStream.nextToken(true);\n\t\n\t          // Extract an expression inside the brackets\n\t          currentNode = this.subparseExpression();\n\t\n\t          // Check for the right bracket\n\t          // -- A Bracket was found\n\t          if (this.tokenStream.currentToken().isRightBracket()) {\n\t            // Error if expression in brackets is empty\n\t            if (currentNode.type == _treeNodeType.TreeNodeType.EMPTY && !currentNode.brackets) {\n\t              this.errors.add(new _message.Message('e_syn_brackets_empty', _pos.Pos.unite(this.tokenStream.previousToken().pos, this.tokenStream.currentToken().pos)));\n\t              this.hasErrors = true;\n\t            }\n\t            currentNode.brackets = true;\n\t            this.tokenStream.nextToken(true);\n\t            return currentNode;\n\t\n\t            // -- Any other token found\n\t          } else {\n\t\n\t              // If the content of the parsed part of the expression is a single\n\t              // factor, add it as the sub-node to this expression\n\t              // This is made for further semantic check of it\n\t              if (currentNode.type == _treeNodeType.TreeNodeType.SYMBOL || currentNode.type == _treeNodeType.TreeNodeType.NUMBER || currentNode.type == _treeNodeType.TreeNodeType.FUNCTION) {\n\t                currentNode = this.wrapNode(currentNode);\n\t              }\n\t\n\t              currentNode.hasErrors = true;\n\t              currentNode.type = _treeNodeType.TreeNodeType.E_UNPARSED;\n\t\n\t              if (!this.tokenStream.currentToken().isErrorToken() && !this.tokenStream.currentToken().isEOF() && this.tokenStream.currentToken().type != _tokenType.TokenType.SEMICOLON) {\n\t                this.errors.add(new _message.Message('e_syn_brackets_wrong_symbol', this.tokenStream.currentToken().pos, { currentToken: this.tokenStream.currentToken() }));\n\t              }\n\t\n\t              // Look for a stop-symbol (next right bracket of the same level)\n\t              // to continue parsing after it\n\t              var _stopSymbol = this.tokenStream.findNextTokenAtTheSameLevel([_tokenType.TokenType.RB_RIGHT, _tokenType.TokenType.E_SB_RIGHT, _tokenType.TokenType.SEMICOLON], true);\n\t\n\t              // Stop-symbol was found\n\t              if (_stopSymbol) {\n\t                // A bracket was found\n\t                if (_stopSymbol.isRightBracket()) {\n\t                  currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.currentToken().pos);\n\t                  this.tokenStream.nextToken(true);\n\t                  // A SEMICOLON was found\n\t                } else {\n\t                    currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.previousToken().pos);\n\t                    this.errors.add(new _message.Message('e_syn_missing_rb', _pos.Pos.ending(currentNode.pos)));\n\t                  }\n\t                // A bracket was not found – move to the end of the TokenStream\n\t              } else {\n\t                  this.tokenStream.lastToken(true);\n\t                  currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.lastToken().pos);\n\t                  this.errors.add(new _message.Message('e_syn_missing_rb', _pos.Pos.ending(currentNode.pos)));\n\t                  this.tokenStream.nextToken(true);\n\t                }\n\t            }\n\t        }\n\t\n\t      //////////////////////\n\t      // Factor is malformed\n\t      //////////////////////\n\t\n\t      // Try to unite all unknown tokens into the factor together with numbers and symbols between them\n\t      if (this.tokenStream.currentToken().isErrorToken() && !this.tokenStream.currentToken().isMathOperator() && !this.tokenStream.currentToken().isRightBracket()) {\n\t        currentNode.type = _treeNodeType.TreeNodeType.UNPARSED;\n\t        while (this.tokenStream.currentToken().isErrorToken() && !this.tokenStream.currentToken().isMathOperator() || (this.tokenStream.currentToken().isNumber() || this.tokenStream.currentToken().isSymbol()) && this.tokenStream.nextToken().isErrorToken() && !this.tokenStream.nextToken().isMathOperator()) {\n\t          this.tokenStream.nextToken(true);\n\t        }\n\t        currentNode.pos = _pos.Pos.unite(firstNodeToken.pos, this.tokenStream.currentToken().pos);\n\t      }\n\t\n\t      return currentNode;\n\t    }\n\t\n\t    /**\n\t     * Creates a blank tree node.\n\t     * This function helps at the beginning of each subparseXXX function.\n\t     *\n\t     * @returns {TreeNode}\n\t     */\n\t\n\t  }, {\n\t    key: 'createEmptyTreeNode',\n\t    value: function createEmptyTreeNode() {\n\t      //TODO Add a counter to catch “too long math stuff” error\n\t      /** @type TreeNode */\n\t      var result = new _treeNode.TreeNode();\n\t      if (this.tokenStream.currentToken() == this.tokenStream.firstToken()) {\n\t        result.pos = _pos.Pos.between(new _pos.Pos(0, 0, 0, 0), this.tokenStream.currentToken().pos);\n\t      } else {\n\t        result.pos = _pos.Pos.between(this.tokenStream.previousToken().pos, this.tokenStream.currentToken().pos);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Is used in sub-parsing expressions, terms and powers.\n\t     * Detects empty operands in the entire token stream.\n\t     */\n\t\n\t  }, {\n\t    key: 'checkForMissedOperands',\n\t    value: function checkForMissedOperands() {\n\t      this.tokenStream.firstToken(true);\n\t      var previousToken;\n\t      var currentToken;\n\t      var nextToken;\n\t\n\t      do {\n\t        currentToken = this.tokenStream.currentToken();\n\t\n\t        // The check applies to any mathematical operator in a token stream.\n\t        if (currentToken.isMathOperator() && !currentToken.isErrorToken()) {\n\t          previousToken = this.tokenStream.previousToken();\n\t          nextToken = this.tokenStream.nextToken();\n\t\n\t          // Case an operator appears at the beginning of something (except SUBTRACTION sign)\n\t          if (currentToken.type != _tokenType.TokenType.SUBTRACT && (!previousToken || !(previousToken.isMathOperator() || previousToken.isRightBracket() || previousToken.isNumber() || previousToken.isSymbol()))) {\n\t            this.errors.add(new _message.Message('e_syn_missing_operand_at_begin', _pos.Pos.beginning(this.tokenStream.currentToken().pos), { currentToken: currentToken }));\n\t          }\n\t\n\t          // Case an operator is followed by another operator\n\t          if (nextToken && nextToken.isMathOperator() && !nextToken.isErrorToken()) {\n\t            this.errors.add(new _message.Message('e_syn_missing_operand', _pos.Pos.between(currentToken.pos, nextToken.pos), {\n\t              previousToken: currentToken,\n\t              currentToken: nextToken\n\t            }));\n\t          }\n\t\n\t          // Case an operator appears at the end of something\n\t          if (!nextToken || !(nextToken.isMathOperator() || nextToken.isNumber() || nextToken.isSymbol() || nextToken.isLeftBracket()) && nextToken.type !== _tokenType.TokenType.E_REST) {\n\t            this.errors.add(new _message.Message('e_syn_missing_operand_at_end', _pos.Pos.between(currentToken.pos, nextToken.pos), {\n\t              currentToken: currentToken\n\t            }));\n\t          }\n\t        }\n\t      } while (this.tokenStream.nextToken(true));\n\t    }\n\t\n\t    /**\n\t     * Wraps a node with another node.\n\t     *\n\t     * @param {TreeNode} nodeToBeWrapped\n\t     *    source node\n\t     *\n\t     * @returns {TreeNode}\n\t     */\n\t\n\t  }, {\n\t    key: 'wrapNode',\n\t    value: function wrapNode(nodeToBeWrapped) {\n\t      var wrapperNode = this.createEmptyTreeNode();\n\t      wrapperNode.subNodes = [nodeToBeWrapped];\n\t      wrapperNode.pos = nodeToBeWrapped.pos;\n\t      wrapperNode.hasErrors = nodeToBeWrapped.hasErrors;\n\t      return wrapperNode;\n\t    }\n\t  }]);\n\t\n\t  return Tree;\n\t}();\n\t\n\tTree.MAX_NODE_COUNT = 500;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ValidationRule = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Represents a single validation rule.\n\t */\n\t\n\tvar ValidationRule = exports.ValidationRule = function () {\n\t\n\t  /**\n\t  * @param {Object} value\n\t  *    The rule itself (yes/no/including/excluding)\n\t  * @param {Object} listOrParams\n\t  *    Some additional parameters of the rule or a list.\n\t  */\n\t\n\t  function ValidationRule(value, listOrParams) {\n\t    _classCallCheck(this, ValidationRule);\n\t\n\t    if (!value) {\n\t      value = ValidationRule.NO;\n\t    }\n\t    this.value = value;\n\t\n\t    if (_underscore2.default.isArray(listOrParams)) {\n\t      this.list = listOrParams;\n\t    } else if (listOrParams != null) {\n\t      _underscore2.default.extend(this, listOrParams);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helps to determine using a short notation if the rule has type NO.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\t\n\t\n\t  _createClass(ValidationRule, [{\n\t    key: 'isNo',\n\t    value: function isNo() {\n\t      return this.value == ValidationRule.NO;\n\t    }\n\t\n\t    /**\n\t     * Helps to determine using a short notation if the rule has type ONLY.\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isOnly',\n\t    value: function isOnly() {\n\t      return this.value == ValidationRule.ONLY;\n\t    }\n\t\n\t    /**\n\t     * Helps to determine using a short notation if the rule has type EXCLUDING.\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isExcluding',\n\t    value: function isExcluding() {\n\t      return this.value == ValidationRule.EXCLUDING;\n\t    }\n\t\n\t    /**\n\t     * Helps to determine using a short notation if the rule has type YES.\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isYes',\n\t    value: function isYes() {\n\t      return this.value == ValidationRule.YES;\n\t    }\n\t  }]);\n\t\n\t  return ValidationRule;\n\t}();\n\t\n\tValidationRule.NO = 0;\n\tValidationRule.ONLY = 1;\n\tValidationRule.EXCLUDING = 2;\n\tValidationRule.YES = 4;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ValidationRules = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _validationRule = __webpack_require__(17);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * ValidationRules are used by Validator to find errors\n\t *  in a Tree. Depending on the set of rules, an output of\n\t *  the validator can be different.\n\t *\n\t * @see StandardValidationRules for a preset list of rules\n\t *\n\t */\n\t\n\tvar ValidationRules = exports.ValidationRules = function () {\n\t\n\t  /**\n\t   * All rules are NO by default.\n\t   */\n\t\n\t  function ValidationRules() {\n\t    _classCallCheck(this, ValidationRules);\n\t\n\t    this.allowFunctions = new _validationRule.ValidationRule();\n\t    this.allowConstants = new _validationRule.ValidationRule();\n\t    this.allowVariables = new _validationRule.ValidationRule();\n\t\n\t    // this.acceptMathOperations = new ValidationRule();\n\t    this.acceptEquations = new _validationRule.ValidationRule();\n\t    this.acceptInequalities = new _validationRule.ValidationRule();\n\t    this.acceptSequenceOfStatements = new _validationRule.ValidationRule();\n\t    this.acceptEmpty = new _validationRule.ValidationRule();\n\t    this.acceptOnlyNumber = new _validationRule.ValidationRule();\n\t\n\t    this.valueOnlyFinite = new _validationRule.ValidationRule();\n\t    this.valueOnlyInteger = new _validationRule.ValidationRule();\n\t    this.valueRange = new _validationRule.ValidationRule();\n\t    this.valueOnlyGreaterThan = new _validationRule.ValidationRule();\n\t    this.valueOnlyLessThan = new _validationRule.ValidationRule();\n\t  }\n\t\n\t  /**\n\t   * Sets a certain rule.\n\t   *\n\t   * @param {string} name\n\t   *    Name of the rule.\n\t   * @param {number} [value]\n\t   *    Value of a rule. NO by default.\n\t   * @param {string[]} [list]\n\t   *    List of exclusions.\n\t   * @returns {ValidationRules}\n\t   *      Current object (OK for method chaining).\n\t   */\n\t\n\t\n\t  _createClass(ValidationRules, [{\n\t    key: 'setRule',\n\t    value: function setRule(name, value, list) {\n\t      this[name] = new _validationRule.ValidationRule(value, list);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Returns a deep copy of the set of validation rules.\n\t     *\n\t     * @returns {ValidationRules}\n\t     *      Current object (OK for method chaining).\n\t     */\n\t\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      var result = new ValidationRules();\n\t      _underscore2.default.extend(result, _underscore2.default.map(this, _underscore2.default.clone));\n\t      return result;\n\t    }\n\t  }]);\n\t\n\t  return ValidationRules;\n\t}();\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Validator = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _message = __webpack_require__(2);\n\t\n\tvar _messageList = __webpack_require__(3);\n\t\n\tvar _pos = __webpack_require__(5);\n\t\n\tvar _tokenType = __webpack_require__(6);\n\t\n\tvar _treeNodeType = __webpack_require__(14);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Validator applies semantic analysis on Text.\n\t * It visits Tree instance and finds semantic\n\t * errors depending on what rule set is currently used.\n\t */\n\t\n\tvar Validator = exports.Validator = function () {\n\t  function Validator() {\n\t    _classCallCheck(this, Validator);\n\t\n\t    this.errors = new _messageList.MessageList();\n\t    //XXX start using warnings\n\t    this.warnings = new _messageList.MessageList();\n\t  }\n\t\n\t  /**\n\t   * Validates a tree of nodes.\n\t   * Also adds “id” property to each constant, variable or function,\n\t   * which corresponds to a symbol id (and alias in the WEST Dialect)\n\t   *\n\t   * @param {Tree} tree\n\t   *    Input tree.\n\t   * @param {Symbols} symbols\n\t   *    Symbols being used.\n\t   * @param {ValidationRules} rules\n\t   *    Set of validation rules being used.\n\t   * @param {Calculator} [calculator]\n\t   *    If present, it is attempted to calculate the value of the tree and validate it.\n\t   *\n\t   * @returns {boolean}\n\t   *      true if any changes were made before the previous validation.\n\t   */\n\t\n\t\n\t  _createClass(Validator, [{\n\t    key: 'validate',\n\t    value: function validate(tree, symbols, rules, calculator) {\n\t\n\t      this.errors.clear();\n\t\n\t      // Check for emptiness\n\t      if (rules.acceptEmpty.isNo() && tree.root.isEmpty()) {\n\t        this.errors.add(new _message.Message('e_sem_forbidden_empty', tree.root.pos));\n\t      } else {\n\t        // Recursively validate a tree\n\t        this.validateNode(tree.root, symbols, rules);\n\t      }\n\t\n\t      // Validate value if needed\n\t      if (calculator && this.errors.isEmpty()) {\n\t        // Calculate cached values of the tree nodes\n\t        // to get the value of the tree if possible.\n\t        calculator.calculateCachedValues(tree.root);\n\t\n\t        // Apply some additional rules\n\t        // -- if Accepting only integers\n\t        if (rules.valueOnlyInteger.isYes() && isFinite(tree.root.value) && Math.round(tree.root.value) != tree.root.value) {\n\t          this.errors.add(new _message.Message('e_sem_expected_int', tree.root.pos, { value: tree.root.value }));\n\t\n\t          // -- if accepting only finite numbers\n\t        } else if (rules.valueOnlyFinite.isYes() && !isFinite(tree.root.value)) {\n\t            this.errors.add(new _message.Message('e_sem_expected_finite', tree.root.pos, { value: tree.root.value }));\n\t          }\n\t\n\t        // -- if accepting only a number of some range\n\t        if (rules.valueRange.isOnly() && isFinite(tree.root.value) && (tree.root.value < rules.valueRange.min || tree.root.value > rules.valueRange.max)) {\n\t          this.errors.add(new _message.Message('e_sem_expected_range', tree.root.pos, { value: tree.root.value, range: rules.valueRange }));\n\t        }\n\t\n\t        // -- if Accepting only numbers more than a number\n\t        if (rules.valueOnlyGreaterThan.isYes() && isFinite(tree.root.value) && isFinite(rules.valueOnlyGreaterThan.bound) && tree.root.value <= rules.valueOnlyGreaterThan.bound) {\n\t          this.errors.add(new _message.Message('e_sem_expected_gt', tree.root.pos, { value: tree.root.value, bound: rules.valueOnlyGreaterThan.bound }));\n\t        }\n\t\n\t        // -- if Accepting only numbers less than a number\n\t        if (rules.valueOnlyLessThan.isYes() && isFinite(tree.root.value) && tree.root.value >= rules.valueOnlyLessThan.bound) {\n\t          this.errors.add(new _message.Message('e_sem_expected_lt', tree.root.pos, { value: tree.root.value, bound: rules.valueOnlyLessThan.bound }));\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Recursively validates a tree node\n\t     *\n\t     * @param {TreeNoe} treeNode\n\t     * @param {Symbols} symbols\n\t     *    Symbols being used.\n\t     * @param {ValidationRules} rules\n\t     *    Set of validation rules being used.\n\t     */\n\t\n\t  }, {\n\t    key: 'validateNode',\n\t    value: function validateNode(treeNode, symbols, rules) {\n\t      var symbolId;\n\t      var possibleMessageParams;\n\t\n\t      switch (treeNode.type) {\n\t        /////////////////////////////\n\t        // Constant, variable or a misused function name / unknown symbol\n\t        /////////////////////////////\n\t\n\t        case _treeNodeType.TreeNodeType.SYMBOL:\n\t\n\t          ///////////\n\t          // Constant\n\t\n\t          // Check a symbol in a list of standard constants\n\t          symbolId = symbols.findConstant(treeNode.name);\n\t          possibleMessageParams = {\n\t            name: treeNode.nameRaw,\n\t            id: symbolId\n\t          };\n\t\n\t          if (symbolId) {\n\t\n\t            // Keep node sub-type and the id of the constant in the node.\n\t            treeNode.id = symbolId;\n\t            treeNode.subType = _treeNodeType.TreeNodeType.STANDARD_CONSTANT;\n\t\n\t            // All constants are forbidden here.\n\t            if (rules.allowConstants.isNo()) {\n\t              this.errors.add(new _message.Message('e_sem_constant_forbidden_all', treeNode.pos, possibleMessageParams));\n\t\n\t              // This constant is forbidden here.\n\t            } else if (rules.allowConstants.isOnly() && _underscore2.default.indexOf(rules.allowConstants.list, symbolId) == -1 || rules.allowConstants.isExcluding() && _underscore2.default.indexOf(rules.allowConstants.list, symbolId) !== -1) {\n\t                this.errors.add(new _message.Message('e_sem_constant_forbidden_this', treeNode.pos, possibleMessageParams));\n\t              }\n\t\n\t            return;\n\t          }\n\t\n\t          /////////////////////////////\n\t          // Variable\n\t          // Check a symbol in a list of variables\n\t          symbolId = symbols.findVariable(treeNode.name);\n\t          possibleMessageParams = {\n\t            name: treeNode.nameRaw,\n\t            id: symbolId\n\t          };\n\t\n\t          if (symbolId) {\n\t\n\t            // Keep node sub-type and the id of the variable in the node.\n\t            treeNode.id = symbolId;\n\t            treeNode.subType = _treeNodeType.TreeNodeType.STANDARD_VARIABLE;\n\t\n\t            // All variables are forbidden here.\n\t            if (rules.allowVariables.isNo()) {\n\t              this.errors.add(new _message.Message('e_sem_variable_forbidden_all', treeNode.pos, possibleMessageParams));\n\t\n\t              // This variable is forbidden here.\n\t            } else if (rules.allowVariables.isOnly() && _underscore2.default.indexOf(rules.allowVariables.list, symbolId) == -1 || rules.allowVariables.isExcluding() && _underscore2.default.indexOf(rules.allowVariables.list, symbolId) !== -1) {\n\t                this.errors.add(new _message.Message('e_sem_variable_forbidden_this', treeNode.pos, possibleMessageParams));\n\t              }\n\t            return;\n\t          }\n\t\n\t          /////////////////////////////\n\t          // Function name as a symbol\n\t          // Check a symbol in a list of standard functions\n\t          symbolId = symbols.findFunction(treeNode.name);\n\t          if (symbolId) {\n\t            this.errors.add(new _message.Message('e_sem_function_as_symbol', treeNode.pos, { name: treeNode.nameRaw, id: symbolId }));\n\t            return;\n\t          }\n\t\n\t          /////////////////////////////\n\t          // Unknown symbol\n\t          this.errors.add(new _message.Message('e_sem_unknown_symbol', treeNode.pos, { name: treeNode.nameRaw }));\n\t          return;\n\t\n\t        /////////////////////////////\n\t        // Function (or a misused constant or variable name)\n\t        /////////////////////////////\n\t        case _treeNodeType.TreeNodeType.FUNCTION:\n\t\n\t          // Validate subNodes of a function\n\t          this.validateSubNodes(treeNode, symbols, rules);\n\t\n\t          // Check a function name in a list of standard functions\n\t          symbolId = symbols.findFunction(treeNode.name);\n\t          possibleMessageParams = {\n\t            name: treeNode.nameRaw,\n\t            id: symbolId\n\t          };\n\t\n\t          if (symbolId) {\n\t\n\t            // Keep node sub-type and the ID of the function in the node.\n\t            treeNode.id = symbolId;\n\t            treeNode.subType = _treeNodeType.TreeNodeType.STANDARD_FUNCTION;\n\t\n\t            // All functions are forbidden here.\n\t            if (rules.allowFunctions.isNo()) {\n\t              this.errors.add(new _message.Message('e_sem_function_forbidden_all', treeNode.namePos, possibleMessageParams));\n\t\n\t              // This function is forbidden here.\n\t            } else if (rules.allowFunctions.isOnly() && _underscore2.default.indexOf(rules.allowFunctions.list, symbolId) == -1 || rules.allowFunctions.isExcluding() && _underscore2.default.indexOf(rules.allowFunctions.list, symbolId) !== -1) {\n\t                this.errors.add(new _message.Message('e_sem_function_forbidden_this', treeNode.namePos, possibleMessageParams));\n\t              }\n\t\n\t            // Check argument count for the function.\n\t            var argumentCount = symbols.functions[symbolId].argumentCount;\n\t            var realArgumentCount = treeNode.subNodes.length;\n\t            var errorPos;\n\t\n\t            possibleMessageParams = {\n\t              name: treeNode.nameRaw,\n\t              argumentCount: argumentCount,\n\t              realArgumentCount: realArgumentCount\n\t            };\n\t            // -- Case 1: function accepts exactly argumentCount arguments.\n\t            if (_underscore2.default.isNumber(argumentCount)) {\n\t              // Passed too much arguments.\n\t              if (realArgumentCount > argumentCount) {\n\t                if (treeNode.subNodes[argumentCount - 1]) {\n\t                  errorPos = _pos.Pos.unite(_pos.Pos.ending(treeNode.subNodes[argumentCount - 1].pos), _pos.Pos.ending(treeNode.argumentPos));\n\t                } else {\n\t                  errorPos = treeNode.argumentPos;\n\t                }\n\t                this.errors.add(new _message.Message('e_sem_function_arguments_extra_exact', errorPos, possibleMessageParams));\n\t\n\t                // Passed too few arguments.\n\t              } else if (realArgumentCount < argumentCount) {\n\t                  errorPos = realArgumentCount ? _pos.Pos.unite(_pos.Pos.ending(treeNode.subNodes[realArgumentCount - 1].pos), _pos.Pos.ending(treeNode.argumentPos)) : treeNode.argumentPos;\n\t                  this.errors.add(new _message.Message('e_sem_function_arguments_few_exact', errorPos, possibleMessageParams));\n\t                }\n\t\n\t              // -- Case 2: Function accepts from argumentCount.min to argumentCount.max arguments.\n\t            } else {\n\t                // -- Case 2.1: Upper bound for argument count in Infinity.\n\t                if (argumentCount.max == Infinity) {\n\t                  // Passed too few arguments\n\t                  if (realArgumentCount < argumentCount.min) {\n\t                    errorPos = realArgumentCount ? _pos.Pos.unite(_pos.Pos.ending(treeNode.subNodes[realArgumentCount - 1].pos), _pos.Pos.ending(treeNode.argumentPos)) : treeNode.argumentPos;\n\t                    this.errors.add(new _message.Message('e_sem_function_arguments_few_range_n_inf', errorPos, possibleMessageParams));\n\t                  }\n\t\n\t                  // -- Case 2.2: Both Upper bound and lower bound are numbers.\n\t                } else {\n\t                    if (realArgumentCount < argumentCount.min) {\n\t                      errorPos = realArgumentCount ? _pos.Pos.unite(_pos.Pos.ending(treeNode.subNodes[realArgumentCount - 1].pos), _pos.Pos.ending(treeNode.argumentPos)) : treeNode.argumentPos;\n\t                      this.errors.add(new _message.Message('e_sem_function_arguments_few_range_n_n', errorPos, possibleMessageParams));\n\t                    }if (realArgumentCount > argumentCount.max) {\n\t                      errorPos = _pos.Pos.unite(_pos.Pos.ending(treeNode.subNodes[argumentCount.max - 1].pos), _pos.Pos.ending(treeNode.argumentPos));\n\t                      this.errors.add(new _message.Message('e_sem_function_arguments_extra_range_n_n', errorPos, possibleMessageParams));\n\t                    }\n\t                  }\n\t              }\n\t            return;\n\t          }\n\t\n\t          /////////////////////////////\n\t          // Constant name as a function\n\t          // Check a symbol in a list of standard constants\n\t          symbolId = symbols.findConstant(treeNode.name);\n\t          if (symbolId) {\n\t            this.errors.add(new _message.Message('e_sem_constant_as_function', treeNode.namePos, { name: treeNode.nameRaw, id: symbolId }));\n\t            return;\n\t          }\n\t          /////////////////////////////\n\t          // Variable name as a function\n\t          // Check a symbol in a list of standard variables\n\t          symbolId = symbols.findVariable(treeNode.name);\n\t          if (symbolId) {\n\t            this.errors.add(new _message.Message('e_sem_variable_as_function', treeNode.namePos, { name: treeNode.nameRaw, id: symbolId }));\n\t            return;\n\t          }\n\t\n\t          /////////////////////////////\n\t          // Unknown function\n\t          this.errors.add(new _message.Message('e_sem_unknown_function', treeNode.namePos, { name: treeNode.nameRaw }));\n\t          return;\n\t\n\t        /////////////////////////////\n\t        // Inequality or equation\n\t        /////////////////////////////\n\t        case _treeNodeType.TreeNodeType.STATEMENT:\n\t          if (treeNode.subType == _treeNodeType.TreeNodeType.STATEMENT_EQUATION && rules.acceptEquations.isNo()) {\n\t            this.errors.add(new _message.Message('e_sem_forbidden_equation', treeNode.subActions[0].pos));\n\t          } else if (treeNode.subType == _treeNodeType.TreeNodeType.STATEMENT_INEQUALITY && rules.acceptInequalities.isNo()) {\n\t            this.errors.add(new _message.Message('e_sem_forbidden_inequality', treeNode.subActions[0].pos));\n\t          }\n\t\n\t          this.validateSubNodes(treeNode, symbols, rules);\n\t          return;\n\t\n\t        /////////////////////////////\n\t        // Sequence of statements\n\t        /////////////////////////////\n\t        case _treeNodeType.TreeNodeType.SEQUENCE_OF_STATEMENTS:\n\t          if (rules.acceptSequenceOfStatements.isNo() && treeNode.subActions[0].type == _tokenType.TokenType.SEMICOLON) {\n\t            if (treeNode.subNodes.length == 1) {\n\t              this.errors.add(new _message.Message('e_sem_forbidden_semicolon', treeNode.subActions[0].pos));\n\t            } else {\n\t              this.errors.add(new _message.Message('e_sem_forbidden_sequence_of_statements', treeNode.subActions[0].pos));\n\t            }\n\t          }\n\t\n\t          this.validateSubNodes(treeNode, symbols, rules);\n\t          return;\n\t\n\t        ////////////////////////////\n\t        // Expression, term or power\n\t        ////////////////////////////\n\t        default:\n\t          this.validateSubNodes(treeNode, symbols, rules);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Validates sub-nodes of a given node.\n\t     *\n\t     * @param {Object} treeNode\n\t     *        Node to work with.\n\t     * @param {Symbols} symbols\n\t     *        Symbols being used.\n\t     * @param {ValidationRules} rules\n\t     *        Set of validation rules being used.\n\t     */\n\t\n\t  }, {\n\t    key: 'validateSubNodes',\n\t    value: function validateSubNodes(treeNode, symbols, rules) {\n\t      var subNode;\n\t      for (var i in treeNode.subNodes) {\n\t        if (!treeNode.subNodes.hasOwnProperty(i)) {\n\t          continue;\n\t        }\n\t        subNode = treeNode.subNodes[i];\n\t        if (!subNode.isEmpty() && !subNode.isUnparsed()) {\n\t          this.validateNode(subNode, symbols, rules);\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Validator;\n\t}();\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Helper Class — to implement a functionality of aliases for functions\n\t */\n\t\n\tvar Dialect = exports.Dialect = function Dialect() {\n\t  _classCallCheck(this, Dialect);\n\t};\n\t\n\tDialect.WEST = 1;\n\tDialect.WEST_LONG = 2;\n\tDialect.EAST = 16;\n\tDialect.GREEK = 32;\n\tDialect.RUS = 48;\n\tDialect.RUS_LONG = 49;\n\tDialect.PROGRAMMING = 64;\n\tDialect.MISC = 0;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Locale = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _removeMarkdown = __webpack_require__(22);\n\t\n\tvar _removeMarkdown2 = _interopRequireDefault(_removeMarkdown);\n\t\n\tvar _message = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Locale = exports.Locale = function () {\n\t  function Locale(data) {\n\t    _classCallCheck(this, Locale);\n\t\n\t    this.data = data;\n\t  }\n\t  /**\n\t   * Returns a user-friendly message markdown with details.\n\t   *\n\t   * @param {Message} objectToLocalize\n\t   *      HumaneMath object to extract localized sting from\n\t   *\n\t   * @returns {string}\n\t   *      markdown\n\t   */\n\t\n\t\n\t  _createClass(Locale, [{\n\t    key: 'toMarkdown',\n\t    value: function toMarkdown(objectToLocalize) {\n\t      if (objectToLocalize instanceof _message.Message) {\n\t        var messageId = objectToLocalize.type;\n\t        var message = this.messages[messageId];\n\t        if (_underscore2.default.isString(message)) {\n\t          return message;\n\t        } else if (_underscore2.default.isFunction(message)) {\n\t          var params = _underscore2.default.extend(objectToLocalize.params || {}, objectToLocalize.pos);\n\t          return message(params);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Returns a user-friendly message text with details.\n\t     *\n\t     * @param {Message} objectToLocalize\n\t     *      HumaneMath object to extract localized sting from\n\t     *\n\t     * @returns {string}\n\t     *      unescaped text\n\t     */\n\t\n\t  }, {\n\t    key: 'toText',\n\t    value: function toText(objectToLocalize) {\n\t      var markdown = this.toMarkdown(objectToLocalize);\n\t      return (0, _removeMarkdown2.default)(markdown);\n\t    }\n\t  }]);\n\t\n\t  return Locale;\n\t}();\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(md, options) {\n\t  options = options || {};\n\t  options.stripListLeaders = options.hasOwnProperty('stripListLeaders') ? options.stripListLeaders : true;\n\t  options.gfm = options.hasOwnProperty('gfm') ? options.gfm : true;\n\t\n\t  var output = md;\n\t  try {\n\t    if (options.stripListLeaders) {\n\t      output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d\\.)\\s+/gm, '$1');\n\t    }\n\t    if (options.gfm){\n\t      output = output\n\t        // Header\n\t        .replace(/\\n={2,}/g, '\\n')\n\t        // Strikethrough\n\t        .replace(/~~/g, '')\n\t        // Fenced codeblocks\n\t        .replace(/`{3}.*\\n/g, '');\n\t    }\n\t    output = output\n\t      // Remove HTML tags\n\t      .replace(/<(.*?)>/g, '$1')\n\t      // Remove setext-style headers\n\t      .replace(/^[=\\-]{2,}\\s*$/g, '')\n\t      // Remove footnotes?\n\t      .replace(/\\[\\^.+?\\](\\: .*?$)?/g, '')\n\t      .replace(/\\s{0,2}\\[.*?\\]: .*?$/g, '')\n\t      // Remove images\n\t      .replace(/\\!\\[.*?\\][\\[\\(].*?[\\]\\)]/g, '')\n\t      // Remove inline links\n\t      .replace(/\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, '$1')\n\t      // Remove Blockquotes\n\t      .replace(/>/g, '')\n\t      // Remove reference-style links?\n\t      .replace(/^\\s{1,2}\\[(.*?)\\]: (\\S+)( \".*?\")?\\s*$/g, '')\n\t      // Remove atx-style headers\n\t      .replace(/^\\#{1,6}\\s*([^#]*)\\s*(\\#{1,6})?/gm, '$1')\n\t      .replace(/([\\*_]{1,3})(\\S.*?\\S)\\1/g, '$2')\n\t      .replace(/(`{3,})(.*?)\\1/gm, '$2')\n\t      .replace(/^-{3,}\\s*$/g, '')\n\t      .replace(/`(.+?)`/g, '$1')\n\t      .replace(/\\n{2,}/g, '\\n\\n');\n\t  } catch(e) {\n\t    console.error(e);\n\t    return md;\n\t  }\n\t  return output;\n\t};\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Symbols = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Container for functions, constants and variables\n\t */\n\t\n\tvar Symbols = exports.Symbols = function () {\n\t  function Symbols() {\n\t    _classCallCheck(this, Symbols);\n\t\n\t    this.functionDefinitionsById = [];\n\t    this.constantDefinitionsById = [];\n\t    this.variableDefinitionsById = [];\n\t    this.functionIdsByAlias = {};\n\t    this.constantIdsByAlias = {};\n\t    this.variableIdsByAlias = {};\n\t\n\t    this.disableAutoIndexing();\n\t    this.initialize();\n\t    this.enableAutoIndexing();\n\t\n\t    this.indexAliases(this.functionDefinitionsById, this.functionIdsByAlias);\n\t    this.indexAliases(this.constantDefinitionsById, this.constantIdsByAlias);\n\t    this.indexAliases(this.variableDefinitionsById, this.variableIdsByAlias);\n\t  }\n\t\n\t  _createClass(Symbols, [{\n\t    key: 'initialize',\n\t    value: function initialize() {}\n\t  }, {\n\t    key: 'disableAutoIndexing',\n\t    value: function disableAutoIndexing() {\n\t      this.autoIndexingDisabled = true;\n\t    }\n\t  }, {\n\t    key: 'enableAutoIndexing',\n\t    value: function enableAutoIndexing() {\n\t      delete this.autoIndexingDisabled;\n\t    }\n\t\n\t    /**\n\t     * Registers a function.\n\t     *\n\t     * @private\n\t     *\n\t     * @param {Array} aliases\n\t     *    Alternative names for the function\n\t     * @param {Function} executor\n\t     *    Function object that executes the function.\n\t     * @param {number|Array} [argumentCount=1]\n\t     *    Can be both an integer positive number and an Array of one\n\t     *    or 2 numbers. If the number in an array is\n\t     *    single, it corresponds to minimum number of arguments, otherwise\n\t     *    the first one means minimum argument count, and another one —\n\t     *    maximum count.\n\t     * @param {boolean} [nonSimplifiable=false]\n\t     *    Defines whether a function can be a subject to\n\t     *    simplification. Is true for random generator functions.\n\t     * @param {boolean} [calculateForNaNs=false]\n\t     *    Set to true to avoid “lazy calculating” for the\n\t     *    function. Even if any of the arguments is NaN, calculations will\n\t     *    not be aborted (e.g. useful for “if”).\n\t     */\n\t\n\t  }, {\n\t    key: 'addFunction',\n\t    value: function addFunction(aliases, executor) {\n\t      var argumentCount = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\n\t      var nonSimplifiable = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\t      var calculateForNaNs = arguments.length <= 4 || arguments[4] === undefined ? false : arguments[4];\n\t\n\t      var currentFunctionDefinition = {};\n\t      currentFunctionDefinition.id = this.extractIdFromAliases(aliases);\n\t\n\t      currentFunctionDefinition.aliases = aliases;\n\t\n\t      if (!_underscore2.default.isFunction(executor)) {\n\t        throw new Error('Function ' + currentFunctionDefinition.id + ' does not have a valid executor');\n\t      }\n\t      currentFunctionDefinition.executor = executor;\n\t\n\t      // Add argumentCount\n\t      if (_underscore2.default.isNumber(argumentCount)) {\n\t        currentFunctionDefinition.argumentCount = argumentCount;\n\t      } else if (_underscore2.default.isArray(argumentCount)) {\n\t        currentFunctionDefinition.argumentCount = {\n\t          min: argumentCount[0],\n\t          max: argumentCount.length == 1 ? Number.POSITIVE_INFINITY : argumentCount[1]\n\t        };\n\t      }\n\t\n\t      currentFunctionDefinition.nonSimplifiable = !!nonSimplifiable;\n\t      currentFunctionDefinition.calculateForNaNs = !!calculateForNaNs;\n\t\n\t      this.functionDefinitionsById[currentFunctionDefinition.id] = currentFunctionDefinition;\n\t\n\t      if (!this.autoIndexingDisabled) {\n\t        this.indexAliases(this.functionDefinitionsById, this.functionIdsByAlias);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Registers a constant.\n\t     *\n\t     * @private\n\t     *\n\t     * @param {Array} aliases\n\t     *    Alternative names for the constant\n\t     * @param {number} value\n\t     *    Value of a constant\n\t     */\n\t\n\t  }, {\n\t    key: 'addConstant',\n\t    value: function addConstant(aliases, value) {\n\t      var currentConstantDefinition = {};\n\t      currentConstantDefinition.id = this.extractIdFromAliases(aliases);\n\t      currentConstantDefinition.aliases = aliases;\n\t      currentConstantDefinition.value = value;\n\t\n\t      this.constantDefinitionsById[currentConstantDefinition.id] = currentConstantDefinition;\n\t\n\t      if (!this.autoIndexingDisabled) {\n\t        this.indexAliases(this.constantDefinitionsById, this.constantIdsByAlias);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Registers a variable.\n\t     *\n\t     * @param {Object} aliases\n\t     *    Alternative names for the variable.\n\t     */\n\t\n\t  }, {\n\t    key: 'addVariable',\n\t    value: function addVariable(aliases) {\n\t      var currentVariableDefinition = [];\n\t      currentVariableDefinition.id = this.extractIdFromAliases(aliases);\n\t      currentVariableDefinition.aliases = aliases;\n\t\n\t      this.variableDefinitionsById[currentVariableDefinition.id] = currentVariableDefinition;\n\t\n\t      if (!this.autoIndexingDisabled) {\n\t        this.indexAliases(this.functionDefinitionsById, this.functionIdsByAlias);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Performs a search for a requested function.\n\t     *\n\t     * @param {string} functionName\n\t     *        Name of a function that need to be found.\n\t     *\n\t     * @returns {?string}\n\t     *          id of a function (substitutes alias with the default name)\n\t     *          or null if it was not found.\n\t     */\n\t\n\t  }, {\n\t    key: 'findFunction',\n\t    value: function findFunction(functionName) {\n\t      return this.functionIdsByAlias[functionName] || null;\n\t    }\n\t\n\t    /**\n\t     * Performs a search for a requested constant.\n\t     *\n\t     * @param {string} constantName\n\t     *        Name of a constant that need to be found.\n\t     *\n\t     * @returns {?string}\n\t     *          id of a constant (substitutes alias with the default name)\n\t     *          or null if it was not found.\n\t     *\n\t     */\n\t\n\t  }, {\n\t    key: 'findConstant',\n\t    value: function findConstant(constantName) {\n\t      return this.constantIdsByAlias[constantName] || null;\n\t    }\n\t\n\t    /**\n\t     * Performs a search for a requested variable.\n\t     *\n\t     * @param {string} variableName\n\t     *        Name of a variable that need to be found.\n\t     *\n\t     * @returns {?string}\n\t     *          id of a variable (substitutes alias with the default name)\n\t     *          or null if it was not found.\n\t     */\n\t\n\t  }, {\n\t    key: 'findVariable',\n\t    value: function findVariable(variableName) {\n\t      return this.variableIdsByAlias[variableName] || false;\n\t    }\n\t\n\t    /**\n\t     * Creates a helpful index array of aliases. This helps to find a function\n\t     * or an constant by its alias\n\t     *\n\t     * @private\n\t     *\n\t     * @param {Object} whatToIndex\n\t     *    reference to a list of functions/constants.\n\t     * @param {Object} whereToPut\n\t     *    reference to a list with indexes.\n\t     */\n\t\n\t  }, {\n\t    key: 'indexAliases',\n\t    value: function indexAliases(whatToIndex, whereToPut) {\n\t      _underscore2.default.each(whatToIndex, function (symbolDefinition, symbolId) {\n\t        _underscore2.default.each(symbolDefinition.aliases, function (alias) {\n\t          whereToPut[alias] = symbolId;\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     *\n\t     * @private\n\t     *\n\t     * @param {Object} aliases\n\t     *        key/value pairs\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'extractIdFromAliases',\n\t    value: function extractIdFromAliases(aliases) {\n\t      return _underscore2.default.keys(aliases)[0];\n\t    }\n\t  }]);\n\t\n\t  return Symbols;\n\t}();\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Text = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //import Signal from 'signals';\n\t\n\t\n\tvar _messageList = __webpack_require__(3);\n\t\n\tvar _messageList2 = _interopRequireDefault(_messageList);\n\t\n\tvar _tokenStream = __webpack_require__(8);\n\t\n\tvar _tokenStream2 = _interopRequireDefault(_tokenStream);\n\t\n\tvar _tree = __webpack_require__(16);\n\t\n\tvar _tree2 = _interopRequireDefault(_tree);\n\t\n\tvar _validator = __webpack_require__(19);\n\t\n\tvar _validator2 = _interopRequireDefault(_validator);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Text is a main class used for keeping mathematical statements, expressions, etc.\n\t */\n\t\n\tvar Text = exports.Text = function () {\n\t  function Text() {\n\t    _classCallCheck(this, Text);\n\t  }\n\t\n\t  _createClass(Text, [{\n\t    key: 'construct',\n\t\n\t    /**\n\t     * @param {Symbols} symbols\n\t     * @param {ValidationRules} validationRules\n\t     * @param {string} [defaultContent='']\n\t     */\n\t    value: function construct(symbols, validationRules) {\n\t      var defaultContent = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];\n\t\n\t\n\t      this._tokenStream = new _tokenStream2.default();\n\t      this._tree = new _tree2.default();\n\t      this._validator = new _validator2.default();\n\t\n\t      this._validationRules = validationRules;\n\t\n\t      this.errors = new _messageList2.default();\n\t      this.warnings = new _messageList2.default();\n\t      this.hasErrors = false;\n\t      this.hasWarnings = false;\n\t\n\t      //this.changed = new Signal();\n\t\n\t      this.setContent(defaultContent);\n\t    }\n\t\n\t    /**\n\t     * Updates an object with new text (formula).\n\t     *\n\t     * @param {string} newContent\n\t     *    new mathematical expression that needs to be interpreted.\n\t     *\n\t     * @returns {boolean}\n\t     *     true if the formula was really changed.\n\t     */\n\t\n\t  }, {\n\t    key: 'setContent',\n\t    value: function setContent() {\n\t      var newContent = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t\n\t      // var time_start = new Date().getTime();\n\t\n\t      // Basic check on changes\n\t      if (this.content === newContent) {\n\t        return false;\n\t      }\n\t\n\t      this.content = newContent;\n\t\n\t      // Perform lexical analysis\n\t      if (!this._tokenStream.tokenize(newContent)) {\n\t        return false;\n\t      }\n\t\n\t      // Perform syntactic analysis\n\t      if (!this._tree.parse(this._tokenStream)) {\n\t        return false;\n\t      }\n\t\n\t      // Perform semantic analysis\n\t      this._validator.validate(this._tree, this._validationRules, !this._tokenStream.errors.isEmpty() || !this._tree.errors.isEmpty());\n\t\n\t      // Collect errors\n\t      this.errors = new _messageList2.default(this._tokenStream.errors, this._tree.errors, this._validator.errors).sort();\n\t\n\t      //this.changed.dispatch();\n\t\n\t      // Return true as the text was changed\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Re-validates the math object according to new validation rule set.\n\t     *\n\t     * @param {Object} validationRules\n\t     *\n\t     * @returns {boolean} True if anything was changed.\n\t     */\n\t\n\t  }, {\n\t    key: 'setValidationRules',\n\t    value: function setValidationRules(validationRules) {\n\t      if (this._validationRules == validationRules) {\n\t        return false;\n\t      }\n\t\n\t      this._validationRules = validationRules;\n\t\n\t      // Perform semantic analysis\n\t      if (!this._validator.validate(this._tree, this._validationRules)) {\n\t        return false;\n\t      }\n\t\n\t      // Collect errors\n\t      this.errors = new _messageList2.default(this._tokenStream.errors, this._tree.errors, this._validator.errors).sort();\n\t\n\t      //this.changed.dispatch();\n\t      return true;\n\t    }\n\t    //XXX remove or restore\n\t    // dump() {\n\t    //   return `text: \"${this.content}\", errors: ${this.errors.count()} (${this._tokenStream.errors.count()}, ${this._tree.errors.count()}, ${this._validator.errors.count()})`;\n\t    // //    + ' Warnings: ' + this.warnings.count()\n\t    // //        + '(' + this._tokenStream.warnings.count() + ', '\n\t    // //            + this._tree.warnings.count()    + ', '\n\t    // //            + this._validator.warnings.count()   + ')'\n\t    //     ;\n\t    // }\n\t\n\t  }]);\n\t\n\t  return Text;\n\t}();\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Calculator = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _underscore = __webpack_require__(4);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _tokenType = __webpack_require__(6);\n\t\n\tvar _tokenType2 = _interopRequireDefault(_tokenType);\n\t\n\tvar _treeNodeType = __webpack_require__(14);\n\t\n\tvar _treeNodeType2 = _interopRequireDefault(_treeNodeType);\n\t\n\tvar _text = __webpack_require__(24);\n\t\n\tvar _text2 = _interopRequireDefault(_text);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Calculator can be used for extracting node values.\n\t * It is also helpful to precompute values for some nodes\n\t * a tree in order to make further calculations faster. The calculator\n\t * does not simplify a tree or make any other changes to it except\n\t * for adding or removing “value” property to nodes.\n\t * Calculator is a Visitor.\n\t */\n\t\n\tvar Calculator = exports.Calculator = function () {\n\t  function Calculator() {\n\t    _classCallCheck(this, Calculator);\n\t  }\n\t\n\t  _createClass(Calculator, [{\n\t    key: 'calculateExpression',\n\t\n\t\n\t    /**\n\t     * Recursively calculates values for all nodes starting at “treeNode” where it\n\t     * is possible and stores the result at node.value. This can be useful for\n\t     * increasing the speed of further calculations.\n\t     *\n\t     * @param {MathTreeNode} expressionNode\n\t     *    A MathTreeNode to be calculated. Can be any type of node.\n\t     *\n\t     * @param {Object} variables\n\t     *    Variables passed.\n\t     *\n\t     * @param {Object} userSymbols\n\t     *    Set of user constants and functions. Not in use now.\n\t     *\n\t     * @returns {number}\n\t     *     Value of the expression or NaN if calculation failed.\n\t     */\n\t    value: function calculateExpression(expressionNode, variables, userSymbols) {\n\t      if (expressionNode instanceof _text2.default) {\n\t        expressionNode = expressionNode.tree.root;\n\t      }\n\t\n\t      if (!variables) {\n\t        variables = {};\n\t      }\n\t\n\t      var result = Number.NaN;\n\t      try {\n\t        result = this.calculateValueOfTheNode(expressionNode, variables, userSymbols);\n\t      } catch (e) {\n\t        if (e != this.COULD_NOT_CALCULATE_EXCEPTION) {\n\t          throw e;\n\t        }\n\t      }\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Checks whether the given inequality is true. (Not implemented yet)\n\t     * TODO implement\n\t     *\n\t     * @param {Object}\n\t     *    inequalityNode\n\t     * @param {Object}\n\t     *    variables\n\t     * @param {Object}\n\t     *    userSymbols\n\t     */\n\t    //checkInequality(inequalityNode, variables, userSymbols) {\n\t    //}\n\t\n\t    /**\n\t     * Recursively calculates values for all nodes starting at “treeNode” where it\n\t     * is possible and stores the result at node.value. This can be useful for\n\t     * increasing the speed of further calculations.\n\t     *\n\t     * @param {MathTreeNode} treeNode\n\t     *    A MathTreeNode to be calculated. Can be any type of node.\n\t     * @param {Object} variables\n\t     *    Variables passed.\n\t     * @param {Object} userSymbols\n\t     *    Set of user constants and functions. Not in use now.\n\t     */\n\t\n\t\n\t    /**\n\t     * This inner use exception is to be thrown anytime a calculation of sub-nodes\n\t     * fails. It is caught by a caller function and NaN is returned. Such approach\n\t     * is made to increase the speed of the calculator and avoid performing useless\n\t     * computations.\n\t     */\n\t\n\t  }, {\n\t    key: 'calculateCachedValues',\n\t    value: function calculateCachedValues(treeNode, variables, userSymbols) {\n\t      if (treeNode instanceof _text2.default) {\n\t        treeNode = treeNode.tree.root;\n\t      }\n\t\n\t      if (!variables) {\n\t        variables = {};\n\t      }\n\t\n\t      try {\n\t        this.calculateValueOfTheNode(treeNode, variables, userSymbols, true);\n\t      } catch (e) {\n\t        if (e != this.COULD_NOT_CALCULATE_EXCEPTION) {\n\t          throw e;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all cashed values of the nodes. For instance, if a node contained\n\t     * (pi-3) and its value was equal to 0.14, its value becomes undefined.\n\t     *\n\t     * @param {Object} treeNode\n\t     *    Node to clear values in\n\t     */\n\t\n\t  }, {\n\t    key: 'clearCachedValues',\n\t    value: function clearCachedValues(treeNode) {\n\t      if (treeNode instanceof _text2.default) {\n\t        treeNode = treeNode.tree.root;\n\t      }\n\t\n\t      // Recursively clear child nodes.\n\t      if (treeNode.subNodes) {\n\t        for (var i = treeNode.subNodes.length - 1; i >= 0; i--) {\n\t          this.clearCachedValues(treeNode.subNodes[i]);\n\t        }\n\t      }\n\t\n\t      // Delete a value of the current node in case it is not a number.\n\t      if (treeNode.type != _treeNodeType2.default.NUMBER) {\n\t        delete treeNode.value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Calculates the value of a node and depending on the mode returns it or saves\n\t     * as the node “value” property.\n\t     *\n\t     * @param {MathTreeNode} treeNode\n\t     *    A MathTreeNode to be calculated. Can be any type of node.\n\t     * @param {Object} variables\n\t     *    Variables passed.\n\t     * @param {Object} symbols\n\t     *    Set of constants and functions.\n\t     * @param {boolean} calculateCacheMode\n\t     *    If true, the result of the function will be saved as the node “value” property.\n\t     * @returns {number|NaN}\n\t     *      xxx\n\t     */\n\t\n\t  }, {\n\t    key: 'calculateValueOfTheNode',\n\t    value: function calculateValueOfTheNode(treeNode, variables, symbols, calculateCacheMode) {\n\t\n\t      //FIXME revise\n\t      //// Do nothing if the value is already calculated or this node is a number (it has already got a value).\n\t      // if ((treeNode.value !== null && !calculateCacheMode) || treeNode.type == TreeNodeType.NUMBER)\n\t\n\t      // Do nothing if a value is already known, just return it.\n\t      if (treeNode.value !== undefined) {\n\t        return treeNode.value;\n\t      }\n\t\n\t      // The result is meaningless by default.\n\t      var result = null;\n\t\n\t      // All values of sub-nodes must be kept in a separate array to be then passed\n\t      // to an executor function or processed.\n\t      var subNodesValues = new Array();\n\t\n\t      // Detects if the function must return NaN if any of sub-nodes contains NaN.\n\t      var failOnSubNodeNaN = true;\n\t\n\t      // If is a special case. No need to return NaN if any of the arguments is NaN.\n\t      if (treeNode.type == _treeNodeType2.default.FUNCTION && symbols.functions[treeNode.id] && symbols.functions[treeNode.id].calculateForNaNs) {\n\t        failOnSubNodeNaN = false;\n\t      }\n\t\n\t      // Calculate values for all children sub-nodes if there are any.\n\t      if (treeNode.subNodes) {\n\t        for (var i = treeNode.subNodes.length - 1; i >= 0; i--) {\n\t          // Try to get the value of a sub-node and saving it.\n\t          if (treeNode.subNodes[i].value === undefined) {\n\t            // If failOnSubNodeNaN is false, calculations are made in\n\t            // try/catch block to avoid lazy finish in case of a NaN.\n\t            if (!failOnSubNodeNaN) {\n\t              try {\n\t                subNodesValues[i] = this.calculateValueOfTheNode(treeNode.subNodes[i], variables, symbols, calculateCacheMode);\n\t              } catch (e) {\n\t                if (e != this.COULD_NOT_CALCULATE_EXCEPTION) {\n\t                  throw e;\n\t                }\n\t              }\n\t            } else {\n\t              subNodesValues[i] = this.calculateValueOfTheNode(treeNode.subNodes[i], variables, symbols, calculateCacheMode);\n\t            }\n\t          } else {\n\t            subNodesValues[i] = treeNode.subNodes[i].value;\n\t          }\n\t\n\t          // If any of sub-nodes has a non-numeric value and failOnSubNodeNaN\n\t          // is not false, return.\n\t          if (failOnSubNodeNaN && (subNodesValues[i] === undefined || subNodesValues[i] === null)) {\n\t            return NaN;\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the function cannot be simplified and now in calculate cache mode, return.\n\t      if (calculateCacheMode && treeNode.type == _treeNodeType2.default.FUNCTION && typeof symbols.functions[treeNode.id] != 'undefined' && symbols.functions[treeNode.id].nonSimplifiable) {\n\t        return NaN;\n\t      }\n\t\n\t      var subNodesValuesCount = subNodesValues.length;\n\t\n\t      /////////////////////////////////////\n\t      // Calculate a value of the current node depending on its type.\n\t      /////////////////////////////////////\n\t\n\t      switch (treeNode.type) {\n\t\n\t        /////////////////////////////////////\n\t        // Node is a symbol\n\t        case _treeNodeType2.default.SYMBOL:\n\t          // A symbol is a standard constant.\n\t          if (treeNode.subType == _treeNodeType2.default.STANDARD_CONSTANT) {\n\t            if (typeof symbols.constants[treeNode.id] == 'undefined') {\n\t              return NaN;\n\t            }\n\t            result = symbols.constants[treeNode.id].value;\n\t            break;\n\t          }\n\t\n\t          // A symbol is a variable passed to the calculator.\n\t          if (variables[treeNode.id] !== undefined) {\n\t            result = variables[treeNode.id];\n\t            break;\n\t          }\n\t          //FIXME check this\n\t          break;\n\t\n\t        /////////////////////////////////////\n\t        // Node is a function\n\t        case _treeNodeType2.default.FUNCTION:\n\t\n\t          // A function is standard.\n\t          if (treeNode.subType == _treeNodeType2.default.STANDARD_FUNCTION) {\n\t            if (_typeof(symbols.functions[treeNode.id]) != undefined) {\n\t              return NaN;\n\t            }\n\t            result = symbols.functions[treeNode.id].executor(subNodesValues);\n\t            break;\n\t          }\n\t          break;\n\t\n\t        /////////////////////////////////////\n\t        // Node is an expression\n\t        case _treeNodeType2.default.EXPRESSION:\n\t          result = subNodesValues[0];\n\t          for (var i = 1; i < subNodesValuesCount; i++) {\n\t            if (treeNode.subActions[i - 1].type == _tokenType2.default.ADD) {\n\t              result += subNodesValues[i];\n\t            } else {\n\t              result -= subNodesValues[i];\n\t            }\n\t          }\n\t          break;\n\t\n\t        /////////////////////////////////////\n\t        // Node is a term\n\t        case _treeNodeType2.default.TERM:\n\t          result = subNodesValues[0];\n\t          for (var i = 1; i < subNodesValuesCount; i++) {\n\t            if (treeNode.subActions[i - 1].type == _tokenType2.default.MULTIPLY) {\n\t              result *= subNodesValues[i];\n\t            } else {\n\t              result /= subNodesValues[i];\n\t            }\n\t          }\n\t          break;\n\t\n\t        /////////////////////////////////////\n\t        // Node is a power\n\t        case _treeNodeType2.default.POWER:\n\t          result = subNodesValues[0];\n\t          for (var i = 1; i < subNodesValuesCount; i++) {\n\t            result = Math.pow(result, subNodesValues[i]);\n\t          }\n\t          break;\n\t      }\n\t\n\t      // Do something with an obtained result\n\t\n\t      if (isNaN(result) && !calculateCacheMode) {\n\t        throw this.COULD_NOT_CALCULATE_EXCEPTION;\n\t      }\n\t\n\t      // Saving node result if it we are in a “calculate cache” mode\n\t      if (calculateCacheMode && _underscore2.default.isNumber(result) && !isNaN(result)) {\n\t        treeNode.value = result;\n\t      }\n\t      return result;\n\t    }\n\t  }]);\n\t\n\t  return Calculator;\n\t}();\n\t\n\tCalculator.COULD_NOT_CALCULATE_EXCEPTION = 13;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _core = __webpack_require__(1);\n\t\n\t_core.HumaneMath.validationRules.ABSTRACT_FUNCTION = new _core.HumaneMath.ValidationRules().setRule('allowFunctions', _core.HumaneMath.ValidationRule.YES).setRule('allowConstants', _core.HumaneMath.ValidationRule.YES).setRule('acceptMathOperations', _core.HumaneMath.ValidationRule.YES);\n\t//  .setRule('allowConstants', HumaneMath.ValidationRule.ONLY, ['e'])\n\t//  .setRule('allowConstants', HumaneMath.ValidationRule.EXCLUDING, ['pi'])\n\t\n\t// Functions\n\t// -- f(x)\n\t_core.HumaneMath.validationRules.FUNCTION_Y_X = _core.HumaneMath.validationRules.ABSTRACT_FUNCTION.clone().setRule('allowVariables', _core.HumaneMath.ValidationRule.ONLY, ['x']);\n\t\n\t// -- f(y)\n\t_core.HumaneMath.validationRules.FUNCTION_X_Y = _core.HumaneMath.validationRules.ABSTRACT_FUNCTION.clone().setRule('allowVariables', _core.HumaneMath.ValidationRule.ONLY, ['y']);\n\t\n\t// -- f(t)\n\t_core.HumaneMath.validationRules.FUNCTION_X_T = _core.HumaneMath.validationRules.ABSTRACT_FUNCTION.clone().setRule('allowVariables', _core.HumaneMath.ValidationRule.ONLY, ['t']);\n\t\n\t_core.HumaneMath.validationRules.FUNCTION_Y_T = _core.HumaneMath.validationRules.FUNCTION_X_T;\n\t\n\t// -- f(a)\n\t_core.HumaneMath.validationRules.FUNCTION_R_A = _core.HumaneMath.validationRules.ABSTRACT_FUNCTION.clone().setRule('allowVariables', _core.HumaneMath.ValidationRule.ONLY, ['a']);\n\t\n\t// Arguments\n\t// -- range\n\t_core.HumaneMath.validationRules.ARG_RANGE = new _core.HumaneMath.ValidationRules().setRule('valueOnlyFinite', _core.HumaneMath.ValidationRule.YES).setRule('allowConstants', _core.HumaneMath.ValidationRule.YES);\n\t\n\t// -- steps\n\t_core.HumaneMath.validationRules.ARG_STEPS = new _core.HumaneMath.ValidationRules().setRule('valueOnlyFinite', _core.HumaneMath.ValidationRule.YES).setRule('valueOnlyInteger', _core.HumaneMath.ValidationRule.YES).setRule('valueRange', _core.HumaneMath.ValidationRule.ONLY, {\n\t    min: 2,\n\t    max: 100000\n\t});\n\t\n\t// Canvas bound\n\t_core.HumaneMath.validationRules.CANVAS_BOUNDS = new _core.HumaneMath.ValidationRules().setRule('valueOnlyFinite', _core.HumaneMath.ValidationRule.YES).setRule('allowConstants', _core.HumaneMath.ValidationRule.YES).setRule('valueRange', _core.HumaneMath.ValidationRule.ONLY, {\n\t    min: -1000,\n\t    max: 1000\n\t});\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _core = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/* eslint-disable indent, spellcheck/spell-checker */\n\t/* See http://github.com/eslint/eslint/issues/4696 */\n\t\n\t/**\n\t * The class is a standard source for properties of all standard functions,\n\t * constants and variables.\n\t */\n\t\n\tvar StandardSymbols = function (_HumaneMath$Symbols) {\n\t  _inherits(StandardSymbols, _HumaneMath$Symbols);\n\t\n\t  function StandardSymbols() {\n\t    _classCallCheck(this, StandardSymbols);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(StandardSymbols).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StandardSymbols, [{\n\t    key: 'construct',\n\t    value: function construct() {\n\t      this.addTrigonometricFunctions();\n\t      this.addInverseTrigonometricFunctions();\n\t      this.addHyperbolicTrigonometricFunctions();\n\t      this.addInverseHyperbolicTrigonometricFunctions();\n\t\n\t      this.addRoundingFunctions();\n\t      this.addInvolutionFunctions();\n\t      this.addMiscFunctions();\n\t      this.addNonMathFunctions();\n\t\n\t      this.addConstants();\n\t      this.addVariables();\n\t\n\t      this.addEasterEggs();\n\t    }\n\t  }, {\n\t    key: 'addTrigonometricFunctions',\n\t    value: function addTrigonometricFunctions() {\n\t\n\t      // Sine\n\t      this.addFunction({\n\t        'sin': _core.HumaneMath.Dialect.WEST,\n\t        'sine': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'син': _core.HumaneMath.Dialect.RUS,\n\t        'синус': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.sin(params[0]);\n\t      });\n\t\n\t      // Cosine\n\t      this.addFunction({\n\t        'cos': _core.HumaneMath.Dialect.WEST,\n\t        'cosine': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'кос': _core.HumaneMath.Dialect.RUS,\n\t        'косинус': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.cos(params[0]);\n\t      });\n\t\n\t      // Tangent\n\t      this.addFunction({\n\t        'tan': _core.HumaneMath.Dialect.WEST,\n\t        'tangent': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'tg': _core.HumaneMath.Dialect.EAST,\n\t        'тан': _core.HumaneMath.Dialect.RUS,\n\t        'тангенс': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.tan(params[0]);\n\t      });\n\t\n\t      // Cotangent\n\t      this.addFunction({\n\t        'cot': _core.HumaneMath.Dialect.WEST,\n\t        'cotangent': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'ctg': _core.HumaneMath.Dialect.EAST,\n\t        'ctn': _core.HumaneMath.Dialect.EAST,\n\t        'котан': _core.HumaneMath.Dialect.RUS,\n\t        'котангенс': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return 1.0 / Math.tan(params[0]);\n\t      });\n\t\n\t      // Secant\n\t      this.addFunction({\n\t        'sec': _core.HumaneMath.Dialect.WEST,\n\t        'secant': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'сек': _core.HumaneMath.Dialect.RUS,\n\t        'секанс': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return 1.0 / Math.cos(params[0]);\n\t      });\n\t\n\t      // Cosecant\n\t      this.addFunction({\n\t        'csc': _core.HumaneMath.Dialect.WEST,\n\t        'cosecant': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'cosec': _core.HumaneMath.Dialect.EAST,\n\t        'косек': _core.HumaneMath.Dialect.RUS,\n\t        'косеканс': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return 1.0 / Math.sin(params[0]);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addInverseTrigonometricFunctions',\n\t    value: function addInverseTrigonometricFunctions() {\n\t\n\t      // Arcsine\n\t      this.addFunction({\n\t        'arcsin': _core.HumaneMath.Dialect.WEST,\n\t        'arcsine': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'asin': _core.HumaneMath.Dialect.PROGRAMMING,\n\t        'арксин': _core.HumaneMath.Dialect.RUS,\n\t        'арксинус': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.asin(params[0]);\n\t      });\n\t\n\t      // Arccosine\n\t      this.addFunction({\n\t        'arccos': _core.HumaneMath.Dialect.WEST,\n\t        'arccosine': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'acos': _core.HumaneMath.Dialect.PROGRAMMING,\n\t        'арккос': _core.HumaneMath.Dialect.RUS,\n\t        'арккосинус': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.acos(params[0]);\n\t      });\n\t\n\t      // Arctangent\n\t      this.addFunction({\n\t        'arctan': _core.HumaneMath.Dialect.WEST,\n\t        'arctangent': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'arctg': _core.HumaneMath.Dialect.EAST,\n\t        'atan': _core.HumaneMath.Dialect.PROGRAMMING,\n\t        'арктан': _core.HumaneMath.Dialect.RUS,\n\t        'арктангенс': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.atan(params[0]);\n\t      });\n\t\n\t      // Arccotangent\n\t      this.addFunction({\n\t        'arccot': _core.HumaneMath.Dialect.WEST,\n\t        'arccotangent': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'arcctg': _core.HumaneMath.Dialect.EAST,\n\t        'acot': _core.HumaneMath.Dialect.PROGRAMMING,\n\t        'арккотан': _core.HumaneMath.Dialect.RUS,\n\t        'арккотангенс': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return (params[0] < 0 ? Math.PI : 0) + Math.atan(1 / params[0]);\n\t      });\n\t\n\t      // Arcsecant\n\t      this.addFunction({\n\t        'arcsec': _core.HumaneMath.Dialect.WEST,\n\t        'arcsecant': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'asec': _core.HumaneMath.Dialect.PROGRAMMING,\n\t        'арксек': _core.HumaneMath.Dialect.RUS,\n\t        'арксеканс': _core.HumaneMath.Dialect.RUS_LONG\n\t\n\t      }, function (params) {\n\t        return Math.acos(1 / params[0]);\n\t      });\n\t\n\t      // Arccosecant\n\t      this.addFunction({\n\t        'arccsc': _core.HumaneMath.Dialect.WEST,\n\t        'arcsecant': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'arccosec': _core.HumaneMath.Dialect.EAST,\n\t        'acosec': _core.HumaneMath.Dialect.PROGRAMMING,\n\t        'арксек': _core.HumaneMath.Dialect.RUS,\n\t        'арккосеканс': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.asin(1 / params[0]);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addHyperbolicTrigonometricFunctions',\n\t    value: function addHyperbolicTrigonometricFunctions() {\n\t\n\t      // Hyperbolic sine\n\t      this.addFunction({\n\t        'sinh': _core.HumaneMath.Dialect.WEST,\n\t        'sh': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return (Math.exp(params[0]) - Math.exp(-params[0])) / 2.0;\n\t      });\n\t\n\t      // Hyperbolic cosine\n\t      this.addFunction({\n\t        'cosh': _core.HumaneMath.Dialect.WEST,\n\t        'ch': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return (Math.exp(params[0]) + Math.exp(-params[0])) / 2.0;\n\t      });\n\t\n\t      // Hyperbolic tangent\n\t      this.addFunction({\n\t        'tanh': _core.HumaneMath.Dialect.WEST,\n\t        'th': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return (Math.exp(2 * params[0]) - 1.0) / (Math.exp(2 * params[0]) + 1.0);\n\t      });\n\t\n\t      // Hyperbolic cotangent\n\t      this.addFunction({\n\t        'coth': _core.HumaneMath.Dialect.WEST,\n\t        'сth': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return (Math.exp(2 * params[0]) + 1.0) / (Math.exp(2 * params[0]) - 1.0);\n\t      });\n\t\n\t      // Hyperbolic secant\n\t      this.addFunction({\n\t        'sech': _core.HumaneMath.Dialect.WEST\n\t      }, function (params) {\n\t        return 2.0 / (Math.exp(params[0]) + Math.exp(-params[0]));\n\t      });\n\t\n\t      // Hyperbolic cosecant\n\t      this.addFunction({\n\t        'csch': _core.HumaneMath.Dialect.WEST,\n\t        'cosech': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return 2.0 / (Math.exp(params[0]) - Math.exp(-params[0]));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addInverseHyperbolicTrigonometricFunctions',\n\t    value: function addInverseHyperbolicTrigonometricFunctions() {\n\t      // Hyperbolic arcsine\n\t      this.addFunction({\n\t        'arcsinh': _core.HumaneMath.Dialect.WEST,\n\t        'arsh': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return Math.log(params[0] + Math.sqrt(params[0] * params[0] + 1));\n\t      });\n\t\n\t      // Hyperbolic arccosine\n\t      this.addFunction({\n\t        'arccosh': _core.HumaneMath.Dialect.WEST,\n\t        'arch': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return params[0] >= 1 ? Math.log(params[0] + Math.sqrt(params[0] * params[0] - 1)) : NaN;\n\t      });\n\t\n\t      // Hyperbolic arctangent\n\t      this.addFunction({\n\t        'arctanh': _core.HumaneMath.Dialect.WEST,\n\t        'arth': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return params[0] < 1 && params[0] > -1 ? Math.log((1 + params[0]) / (1 - params[0])) / 2 : NaN;\n\t      });\n\t\n\t      // Hyperbolic arccotangent\n\t      this.addFunction({\n\t        'arccoth': _core.HumaneMath.Dialect.WEST,\n\t        'arcth': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return params[0] > 1 || params[0] < -1 ? Math.log((params[0] + 1) / params[0] - 1) / 2 : NaN;\n\t      });\n\t\n\t      // Hyperbolic arcsecant\n\t      this.addFunction({\n\t        'arcsech': _core.HumaneMath.Dialect.WEST,\n\t        'arsch': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return params[0] > 0 && params[0] <= 1 ? Math.log((1 + Math.sqrt(1 - params[0] * params[0])) / params[0]) : NaN;\n\t      });\n\t\n\t      // Hyperbolic arccosecant\n\t      this.addFunction({\n\t        'arccsch': _core.HumaneMath.Dialect.WEST,\n\t        'arcsch': _core.HumaneMath.Dialect.EAST\n\t      }, function (params) {\n\t        return Math.log(1 / params[0] + Math.sqrt(params[0] * params[0] + 1) / Math.abs(params[0]));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addRoundingFunctions',\n\t    value: function addRoundingFunctions() {\n\t\n\t      this.addFunction({\n\t        'round': _core.HumaneMath.Dialect.WEST\n\t      }, function (params) {\n\t        return Math.round(params[0]);\n\t      });\n\t\n\t      this.addFunction({\n\t        'floor': _core.HumaneMath.Dialect.WEST\n\t      }, function (params) {\n\t        return Math.floor(params[0]);\n\t      });\n\t\n\t      this.addFunction({\n\t        'ceil': _core.HumaneMath.Dialect.WEST,\n\t        'ceiling': _core.HumaneMath.Dialect.WEST_LONG\n\t      }, function (params) {\n\t        return Math.ceil(params[0]);\n\t      });\n\t\n\t      this.addFunction({\n\t        'frac': _core.HumaneMath.Dialect.WEST,\n\t        'fractional': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'fract': _core.HumaneMath.Dialect.MISC\n\t      }, function (params) {\n\t        return params[0] - Math.floor(params[0]);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addInvolutionFunctions',\n\t    value: function addInvolutionFunctions() {\n\t\n\t      // Power\n\t      this.addFunction({\n\t        'pow': _core.HumaneMath.Dialect.WEST,\n\t        'power': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'степень': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.pow(params[0], params[1]);\n\t      }, 2);\n\t\n\t      // Argument to the power 2\n\t      this.addFunction({\n\t        'sqr': _core.HumaneMath.Dialect.WEST,\n\t        'квадрат': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.pow(params[0], 2);\n\t      });\n\t\n\t      // Square root\n\t      this.addFunction({\n\t        'sqrt': _core.HumaneMath.Dialect.WEST,\n\t        'кк': _core.HumaneMath.Dialect.RUS\n\t      }, function (params) {\n\t        return Math.sqrt(params[0]);\n\t      });\n\t\n\t      // Cubic root\n\t      this.addFunction({\n\t        'cbrt': _core.HumaneMath.Dialect.WEST\n\t        /*'кубкорень': HumaneMath.Dialect.RUS_LONG*/\n\t      }, function (params) {\n\t        return params[0] >= 0 ? Math.pow(params[0], 1 / 3) : -Math.pow(-params[0], 1 / 3);\n\t      });\n\t\n\t      // Root\n\t      this.addFunction({\n\t        'root': _core.HumaneMath.Dialect.WEST,\n\t        'корень': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        if (Math.floor(params[0]) != params[0] || params[0] < 1) {\n\t          return NaN;\n\t        }\n\t        return params[1] >= 0 ? Math.pow(params[1], 1 / params[0]) : Math.floor(params[0] / 2) == params[0] / 2 ? NaN : -Math.pow(-params[1], 1 / params[0]);\n\t      });\n\t\n\t      // E power argument\n\t      this.addFunction({\n\t        'exp': _core.HumaneMath.Dialect.WEST\n\t      }, function (params) {\n\t        return Math.exp(params);\n\t      });\n\t\n\t      // Logarithm\n\t      this.addFunction({\n\t        'log': _core.HumaneMath.Dialect.WEST,\n\t        'лог': _core.HumaneMath.Dialect.RUS,\n\t        'логарифм': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.log(params[1]) / Math.log(params[0]);\n\t      }, 2);\n\t\n\t      // Natural logarithm\n\t      this.addFunction({\n\t        'ln': _core.HumaneMath.Dialect.WEST\n\t      }, function (params) {\n\t        return Math.log(params[0]);\n\t      });\n\t\n\t      // Common logarithm\n\t      this.addFunction({\n\t        'lg': _core.HumaneMath.Dialect.WEST\n\t      }, function (params) {\n\t        return Math.log(params[0]) / Math.LN10;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addMiscFunctions',\n\t    value: function addMiscFunctions() {\n\t      // Abs\n\t      this.addFunction({\n\t        'abs': _core.HumaneMath.Dialect.WEST,\n\t        'modulus': _core.HumaneMath.Dialect.MISC,\n\t        'модуль': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        return Math.abs(params[0]);\n\t      });\n\t\n\t      // Random number from 0 to 1. Calculated every time (no caching)\n\t      this.addFunction({\n\t        'random': _core.HumaneMath.Dialect.WEST\n\t      }, function () {\n\t        return Math.random();\n\t      }, 0, true);\n\t\n\t      // Random number from 0 to 1. Calculated once\n\t      this.addFunction({\n\t        'random2': _core.HumaneMath.Dialect.WEST\n\t      }, function () {\n\t        return Math.random();\n\t      }, 0);\n\t\n\t      // Sign of the argument\n\t      this.addFunction({\n\t        'sgn': _core.HumaneMath.Dialect.WEST,\n\t        'sign': _core.HumaneMath.Dialect.WEST_LONG\n\t      }, function (params) {\n\t        if (isNaN(params[0])) {\n\t          return NaN;\n\t        }\n\t        return params[0] == 0 ? 0 : params[0] > 0 ? 1 : -1;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addNonMathFunctions',\n\t    value: function addNonMathFunctions() {\n\t\n\t      // Maximum value\n\t      this.addFunction({\n\t        'max': _core.HumaneMath.Dialect.WEST,\n\t        'maximum': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'макс': _core.HumaneMath.Dialect.RUS,\n\t        'максимум': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        var result = params[0];\n\t        for (var i = 1; i < params.length; i++) {\n\t          result = Math.max(result, params[i]);\n\t        }\n\t        return result;\n\t      }, [2]);\n\t\n\t      // Minimum value\n\t      this.addFunction({\n\t        'min': _core.HumaneMath.Dialect.WEST,\n\t        'minimum': _core.HumaneMath.Dialect.WEST_LONG,\n\t        'мин': _core.HumaneMath.Dialect.RUS,\n\t        'минимум': _core.HumaneMath.Dialect.RUS_LONG\n\t      }, function (params) {\n\t        var result = params[0];\n\t        for (var i = 1; i < params.length; i++) {\n\t          result = Math.min(result, params[i]);\n\t        }\n\t        return result;\n\t      }, [2]);\n\t\n\t      // Condition\n\t      this.addFunction({\n\t        'if': _core.HumaneMath.Dialect.WEST,\n\t        'если': _core.HumaneMath.Dialect.RUS\n\t      }, function (params) {\n\t        return params[0] > 0 ? params[1] : params[2];\n\t      }, [2], false, true);\n\t    }\n\t  }, {\n\t    key: 'addConstants',\n\t    value: function addConstants() {\n\t\n\t      // Constant equal to a circle's circumference divided by its diameter\n\t      this.addConstant({\n\t        'pi': _core.HumaneMath.Dialect.WEST,\n\t        'π': _core.HumaneMath.Dialect.GREEK,\n\t        'пи': _core.HumaneMath.Dialect.RUS\n\t      }, Math.PI);\n\t\n\t      // Euler's number\n\t      this.addConstant({\n\t        'e': _core.HumaneMath.Dialect.WEST,\n\t        'е': _core.HumaneMath.Dialect.RUS\n\t      }, Math.E);\n\t\n\t      // The golden ratio\n\t      this.addConstant({\n\t        'phi': _core.HumaneMath.Dialect.WEST,\n\t        'ph': _core.HumaneMath.Dialect.MISC,\n\t        'φ': _core.HumaneMath.Dialect.GREEK,\n\t        'фи': _core.HumaneMath.Dialect.RUS\n\t      }, 1.6180339887);\n\t    }\n\t\n\t    /**\n\t     * Loads standard variables Variables are implemented just for keeping aliases\n\t     */\n\t\n\t  }, {\n\t    key: 'addVariables',\n\t    value: function addVariables() {\n\t\n\t      this.addVariable('x', {\n\t        'х': _core.HumaneMath.Dialect.RUS\n\t      });\n\t\n\t      this.addVariable('y', {\n\t        'у': _core.HumaneMath.Dialect.RUS\n\t      });\n\t\n\t      this.addVariable('t', {});\n\t\n\t      this.addVariable('a', {\n\t        'а': _core.HumaneMath.Dialect.RUS\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addEasterEggs',\n\t    value: function addEasterEggs() {\n\t      // Easter eggs\n\t\n\t      // 42 — See\n\t      // http://en.wikipedia.org/wiki/Answer_to_the_Ultimate_Question_of_Life,_the_Universe,_and_Everything\n\t      this.addConstant({\n\t        'answer_to_the_ultimate_question_of_life_the_universe_and_everything': _core.HumaneMath.Dialect.WEST,\n\t        'ответ_на_главный_вопрос_жизни_вселенной_и_всего_такого': _core.HumaneMath.Dialect.RUS\n\t      }, 42);\n\t    }\n\t  }]);\n\t\n\t  return StandardSymbols;\n\t}(_core.HumaneMath.Symbols);\n\t\n\t_core.HumaneMath.StandardSymbols = StandardSymbols;\n\t_core.HumaneMath.symbols.STANDARD = new StandardSymbols();\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _tokenNames, _messages;\n\t\n\tvar _core = __webpack_require__(1);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\t_core.HumaneMath.addLocale('en', {\n\t  tokenNames: (_tokenNames = {}, _defineProperty(_tokenNames, _core.HumaneMath.TokenType.RB_LEFT, 'a left bracket'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.RB_RIGHT, 'a right bracket'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.COMMA, 'a comma'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.EQUAL, 'an equality sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.LESS, 'a “less than” sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.MORE, 'a “more than” sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.LESS_EQUAL, 'a “less than or equal” sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.MORE_EQUAL, 'a “more than or equal” sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.ADD, 'an addition sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.SUBTRACT, 'a subtraction sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.MULTIPLY, 'a multiplication sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.DIVIDE, 'a division sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.POWER, 'an exponentiation sign'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.NUMBER, 'a number'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.SYMBOL, 'a name of a variable or a function'), _defineProperty(_tokenNames, _core.HumaneMath.TokenType.SEMICOLON, 'a semicolon'), _tokenNames),\n\t  messages: (_messages = {}, _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_UNKNOWN, function (token) {\n\t    return 'You cannot use symbol __' + token.raw + '__ in formulas.';\n\t  }), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_NUMBER_MALFORMED, 'Malformed number. A number can contain only one dot and the dot must be surrounded with digits, e.g. _“3.14”_.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_NUMBER_EXPONENTIAL, 'It is not allowed to use an exponential form for numbers. Please, reformat it.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_VERTICAL_SLASH, 'It is not allowed to use vertical slash in formulas. To calculate absolute values, please use function _abs(argument)_.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_STARSTAR, 'It is not allowed to use __“**”__. To exponentiate a number, use _caret sign (“^”)_ or function _power(base, exponent)_.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_EQUALEQUAL, 'It is not allowed to use __“==”__. Use a _single_ equality sign for comparison and assignments.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_MISPLACED_DOT, 'The dot can be used only to separate digits in real numbers. For multiplication use _star sign (“*”)_.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_SB_LEFT, 'Square brackets can not be used. Use a left round bracket instead.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_SB_RIGHT, 'Square brackets can not be used. Use a right round bracket instead.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_CB_LEFT, 'Curly brackets can not be used. Use a left round bracket instead.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_CB_RIGHT, 'Curly brackets can not be used. Use a right round bracket instead.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_AB_LEFT, 'Angle brackets can not be used. Use a left round bracket instead.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_AB_RIGHT, 'Angle brackets can not be used. Use a right round bracket instead.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_BACK_SLASH, 'Use of backslash is not allowed. To divide use _forward slash (“/”)_.'), _defineProperty(_messages, 'e_lex_' + _core.HumaneMath.TokenType.E_REST, 'The input string is too long and it can’t be read completely.'), _defineProperty(_messages, 'e_syn_unknown', 'Unknown syntax error detected.'), _defineProperty(_messages, 'e_syn_function_argument_empty', 'Function argument must not be empty.'), _defineProperty(_messages, 'e_syn_function_argument_wrong_symbol', function e_syn_function_argument_wrong_symbol(params) {\n\t    return 'It is not allowed to use ' + undefined.tokenNames[params.currentToken.type] + ' in a function argument.';\n\t  }), _defineProperty(_messages, 'e_syn_function_argument_semicolon', 'It is not allowed to use a semicolon to separate function arguments. Use a comma instead.'), _defineProperty(_messages, 'e_syn_missing_rb', 'Missing right bracket.'), _defineProperty(_messages, 'e_syn_missing_multiply', function e_syn_missing_multiply(params) {\n\t    return 'It is not allowed to write ' + undefined.tokenNames[params.currentToken.type] + ' right after ' + undefined.tokenNames[params.previousToken.type] + ' Multiplication sign or any other mathematical operation is probably missing.';\n\t  }), _defineProperty(_messages, 'e_syn_missing_operand', function e_syn_missing_operand(params) {\n\t    return 'An operand (number, constant, function, etc.) is missing between ' + params.previousToken.raw + ' and ' + params.currentToken.raw + '”.';\n\t  }), _defineProperty(_messages, 'e_syn_missing_operand_at_begin', function e_syn_missing_operand_at_begin(params) {\n\t    return 'An operand must go before ' + undefined.tokenNames[params.currentToken.type] + '.';\n\t  }), _defineProperty(_messages, 'e_syn_missing_operand_at_end', function e_syn_missing_operand_at_end(params) {\n\t    return 'Mathematical operator (' + undefined.tokenNames[params.currentToken.type] + ') must be followed by an operand (number, constant, function, etc.).';\n\t  }), _defineProperty(_messages, 'e_syn_extra_rb', 'An extra right bracket found.'), _defineProperty(_messages, 'e_syn_brackets_empty', 'Empty brackets are allowed only for function calls with no arguments.'), _defineProperty(_messages, 'e_syn_brackets_wrong_symbol', function e_syn_brackets_wrong_symbol(params) {\n\t    return 'It is not allowed to use ' + undefined.tokenNames[params.currentToken.type] + ' inside of an expression in brackets.';\n\t  }), _defineProperty(_messages, 'e_syn_statements_wrong_symbol', function e_syn_statements_wrong_symbol(params) {\n\t    return 'It is not allowed to use ' + undefined.tokenNames[params.currentToken.type] + ' here.';\n\t  }), _defineProperty(_messages, 'e_syn_statements_comma', 'It is not allowed to use a comma here as it is acceptable only in function arguments. To separate statements use semicolons.'), _defineProperty(_messages, 'e_syn_statement_empty_left', function e_syn_statement_empty_left(params) {\n\t    return 'An expression expected before ' + undefined.tokenNames[params.currentToken.type] + '.';\n\t  }), _defineProperty(_messages, 'e_syn_statement_empty_right', function e_syn_statement_empty_right(params) {\n\t    return 'An expression expected after ' + undefined.tokenNames[params.currentToken.type] + '.';\n\t  }), _defineProperty(_messages, 'e_syn_statement_extra_statement_sign', function e_syn_statement_extra_statement_sign(params) {\n\t    return 'It is not allowed to use ' + undefined.tokenNames[params.currentToken.type] + ' here. A statement has already got ' + undefined.tokenNames[params.statementSign.type] + '.';\n\t  }), _defineProperty(_messages, 'e_sem_constant_forbidden_all', 'It is not allowed to use constants in this input field.'), _defineProperty(_messages, 'e_sem_constant_forbidden_this', function e_sem_constant_forbidden_this(params) {\n\t    return 'It is not allowed to use constant __' + params.name + '__ in this input field.';\n\t  }), _defineProperty(_messages, 'e_sem_constant_as_function', function e_sem_constant_as_function(params) {\n\t    return 'You are trying to use a constant __' + params.name + '__ as a function. Remove following brackets or add a mathematical operation after the constant.';\n\t  }), _defineProperty(_messages, 'e_sem_variable_forbidden_all', 'It is not allowed to use variables in this input field.'), _defineProperty(_messages, 'e_sem_variable_forbidden_this', function e_sem_variable_forbidden_this(params) {\n\t    return 'It is not allowed to use variable __' + params.name + '__ in this input field.';\n\t  }), _defineProperty(_messages, 'e_sem_variable_as_function', function e_sem_variable_as_function(params) {\n\t    return 'You are trying to use a variable __' + params.name + '__ as a function. Remove following brackets or add a mathematical operation after the variable.';\n\t  }), _defineProperty(_messages, 'e_sem_function_forbidden_all', 'It is not allowed to use functions in this input field.'), _defineProperty(_messages, 'e_sem_function_forbidden_this', function e_sem_function_forbidden_this(params) {\n\t    return 'It is not allowed to use function __' + params.name + '__ in this input field.';\n\t  }), _defineProperty(_messages, 'e_sem_function_as_symbol', function e_sem_function_as_symbol(params) {\n\t    return 'You are trying to use function __' + params.name + '__ without brackets. Put the brackets after a function name.';\n\t  }), _defineProperty(_messages, 'e_sem_function_arguments_few_exact', 'Function __${params.name}__ has too few arguments (${params.argumentCount} expected, but found ${params.realArgumentCount}).'), _defineProperty(_messages, 'e_sem_function_arguments_extra_exact', function e_sem_function_arguments_extra_exact(params) {\n\t    return 'Function __' + params.name + '__ has too many arguments (' + params.argumentCount + ' expected, but found ' + params.realArgumentCount + ').';\n\t  }), _defineProperty(_messages, 'e_sem_function_arguments_extra_0', function e_sem_function_arguments_extra_0(params) {\n\t    return 'Function __' + params.name + '__ has does not need any arguments, remove them all.';\n\t  }), _defineProperty(_messages, 'e_sem_function_arguments_few_range_n_inf', function e_sem_function_arguments_few_range_n_inf(params) {\n\t    return 'Function __' + params.name + '__ has too few arguments (more than ' + params.argumentCount.min + ' expected, but found ' + params.realArgumentCount + ').';\n\t  }), _defineProperty(_messages, 'e_sem_function_arguments_few_range_n_n', function e_sem_function_arguments_few_range_n_n(params) {\n\t    return 'Function __' + params.name + '__ has too few arguments (from ' + params.argumentCount.min + ' to ' + params.argumentCount.max + ' expected, but found ' + params.realArgumentCount + ').';\n\t  }), _defineProperty(_messages, 'e_sem_function_arguments_extra_range_n_n', function e_sem_function_arguments_extra_range_n_n(params) {\n\t    return 'Function __' + params.name + '__ has too many arguments (from ' + params.argumentCount.min + ' to ' + params.argumentCount.max + ' expected, but found ' + params.realArgumentCount + ').';\n\t  }), _defineProperty(_messages, 'e_sem_unknown_symbol', function e_sem_unknown_symbol(params) {\n\t    return 'Constant or variable __' + params.name + '__ is unknown.';\n\t  }), _defineProperty(_messages, 'e_sem_unknown_function', function e_sem_unknown_function(params) {\n\t    return 'Function with name __' + params.name + '__ is unknown.';\n\t  }), _defineProperty(_messages, 'e_sem_forbidden_equation', 'It is not allowed to use equations in this input field.'), _defineProperty(_messages, 'e_sem_forbidden_inequality', 'It is not allowed to use inequalities in this input field.'), _defineProperty(_messages, 'e_sem_forbidden_semicolon', 'It is not allowed to use a semicolon in this input field.'), _defineProperty(_messages, 'e_sem_forbidden_sequence_of_statements', 'Semicolons can be used only to separate statements and it is not allowed to use more than one statement in this input field.'), _defineProperty(_messages, 'e_sem_forbidden_empty', 'The field must not be empty.'), _defineProperty(_messages, 'e_sem_expected_finite', 'The value of the field must be finite.'), _defineProperty(_messages, 'e_sem_expected_int', function e_sem_expected_int(params) {\n\t    return 'The value of the field must be integer, but is equal to ' + params.value + '.';\n\t  }), _defineProperty(_messages, 'e_sem_expected_range', function e_sem_expected_range(params) {\n\t    return 'The value of the field is supposed to be in the range between ' + params.range.min + ' and ' + params.range.max + ', but is equal to ' + params.value + '.';\n\t  }), _defineProperty(_messages, 'e_sem_expected_gt', function e_sem_expected_gt(params) {\n\t    return 'The value of the field is supposed to be greater than ' + params.bound + ', but is equal to ' + params.value + '.';\n\t  }), _defineProperty(_messages, 'e_sem_expected_lt', function e_sem_expected_lt(params) {\n\t    return 'The value of the field is supposed to be less than ' + params.bound + ', but is equal to ' + params.value + '.';\n\t  }), _messages)\n\t});\n\t\n\t_core.HumaneMath.setLocale('en');\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=humane-math.js.map"],"sourceRoot":"/source/"}